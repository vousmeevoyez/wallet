"""added quota and quota usage

Revision ID: 4ad9aec165d9
Revises: 97462ce05931
Create Date: 2020-01-20 09:16:01.473681

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4ad9aec165d9'
down_revision = '97462ce05931'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quota',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('no_of_transactions', sa.Integer(), nullable=True),
    sa.Column('reward_amount', sa.Float(), nullable=True),
    sa.Column('wallet_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('quota_usage',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('usage', sa.Integer(), nullable=True),
    sa.Column('quota_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('transaction_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quota_id'], ['quota.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_unique_constraint(None, 'api_key', ['id'])
    op.create_unique_constraint(None, 'balance_log', ['id'])
    op.create_unique_constraint(None, 'bank', ['id'])
    op.create_unique_constraint(None, 'bank_account', ['id'])
    op.create_unique_constraint(None, 'payment', ['id'])
    op.create_unique_constraint(None, 'payment_channel', ['id'])
    op.create_unique_constraint(None, 'payment_plan', ['id'])
    op.create_unique_constraint(None, 'plan', ['id'])
    op.create_unique_constraint(None, 'transaction', ['id'])
    op.create_unique_constraint(None, 'transaction_note', ['id'])
    op.create_unique_constraint(None, 'transaction_type', ['id'])
    op.create_unique_constraint(None, 'user', ['id'])
    op.create_unique_constraint(None, 'va_log', ['id'])
    op.create_unique_constraint(None, 'virtual_account', ['id'])
    op.create_unique_constraint(None, 'wallet', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wallet', type_='unique')
    op.drop_constraint(None, 'virtual_account', type_='unique')
    op.drop_constraint(None, 'va_log', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'transaction_type', type_='unique')
    op.drop_constraint(None, 'transaction_note', type_='unique')
    op.drop_constraint(None, 'transaction', type_='unique')
    op.drop_constraint(None, 'plan', type_='unique')
    op.drop_constraint(None, 'payment_plan', type_='unique')
    op.drop_constraint(None, 'payment_channel', type_='unique')
    op.drop_constraint(None, 'payment', type_='unique')
    op.drop_constraint(None, 'bank_account', type_='unique')
    op.drop_constraint(None, 'bank', type_='unique')
    op.drop_constraint(None, 'balance_log', type_='unique')
    op.drop_constraint(None, 'api_key', type_='unique')
    op.drop_table('quota_usage')
    op.drop_table('quota')
    # ### end Alembic commands ###
