{
	"info": {
		"_postman_id": "0149b157-6878-46b5-b8e1-040907cbeb81",
		"name": "Modana Wallet API Testing",
		"description": "This is API Documentation for Modana Wallet System, ModanaKu provide API for functionality such as Transfer between Employee & Employer, Withdraw, Transfer to External Bank, Transaction Mutation\n\nAccept Application/JSON & FormData",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c0902a7-f390-4aff-94b3-0b3d20a60f0f",
								"exec": [
									"// GET ACCESS TOKEN TESTING",
									"pm.test(\"Make sure is return OK\", () => {",
									"    pm.response.to.be.ok",
									"})",
									"",
									"pm.test(\"Make sure is wrapped inside data\", () => {",
									"    pm.response.to.have.jsonBody(\"data\")",
									"})",
									"",
									"pm.test(\"Make sure it returns access_token and refresh_token\", () => {",
									"    pm.expect(pm.response.json().data, ['access_token', 'refresh_token'])",
									"    pm.environment.set(\"access_token\",pm.response.json().data.access_token)",
									"    pm.environment.set(\"refresh_token\",pm.response.json().data.refresh_token)",
									"})",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "MODANAADMIN",
									"description": "(Required) The username for authentication to Modana Wallet",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"description": "(Required) The password for authentication to Modana Wallet",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/token",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"auth",
								"token"
							]
						},
						"description": "Getting access token by providing username & password"
					},
					"response": [
						{
							"name": "Get Access Token Invalid Parameter",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "",
											"description": "(Required) The username for authentication to Modana Wallet",
											"type": "text"
										},
										{
											"key": "password",
											"value": "",
											"description": "(Required) The password for authentication to Modana Wallet",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/token",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"token"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:51:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "154"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"INVALID_PARAMETER\",\n    \"message\": \"Invalid Parameter\",\n    \"details\": {\n        \"password\": [\n            \" Data cannot be blank\"\n        ],\n        \"username\": [\n            \" Data cannot be blank\"\n        ]\n    }\n}"
						},
						{
							"name": "Get Access Token Invalid Credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "MODANAADMIN",
											"description": "(Required) The username for authentication to Modana Wallet",
											"type": "text"
										},
										{
											"key": "password",
											"value": "testss",
											"description": "(Required) The password for authentication to Modana Wallet",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/token",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"token"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:52:25 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "77"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"INVALID_CREDENTIALS\",\n    \"message\": \"Incorrect Username / Password\"\n}"
						},
						{
							"name": "Get Access Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "MODANAADMIN",
											"description": "(Required) The username for authentication to Modana Wallet",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to Modana Wallet",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/token",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:51:23 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "363"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTA0NjM2ODMsImlhdCI6MTU1MDQ2MTg4Mywic3ViIjoxLCJ0eXBlIjoiQUNDRVNTIn0.pJAgH0u6K812nSC_cQugDGRPkfdYCnNvJV8otlQLqYs\",\n    \"refresh_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTMwNTM4ODMsImlhdCI6MTU1MDQ2MTg4Mywic3ViIjoxLCJ0eXBlIjoiUkVGUkVTSCJ9.zoh5QTKd5v0dbDK9EyqaWKPevJcsPNPQQ3VAp2pHcoU\"\n}"
						},
						{
							"name": "Get Access Token Missing parameter",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "",
											"description": "(Required) The username for authentication to Modana Wallet",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "",
											"description": "(Required) The password for authentication to Modana Wallet",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/token",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"token"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:51:59 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "282"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"MISSING_PARAMETER\",\n    \"message\": \"Input payload validation failed\",\n    \"details\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"password\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a52e81d-9669-403d-964a-c31b9959af08",
								"exec": [
									"// GET REFRESH TOKEN TESTING",
									"pm.test(\"Make sure is return OK\", () => {",
									"    pm.response.to.be.ok",
									"})",
									"",
									"pm.test(\"Make sure is return refreshed access token\", () => {",
									"    pm.expect(pm.response.json().data, ['access_token']);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{unit_test_refresh_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"auth",
								"refresh"
							]
						},
						"description": "A refresh token is a special token that is used to generate additional access tokens. This allows you to have short-lived access tokens without having to collect credentials every single time one expires. You request this token alongside the access and/or ID tokens as part of a user’s initial authentication flow."
					},
					"response": [
						{
							"name": "Get Refresh Token Method not Allowed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/refresh",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"refresh"
									]
								}
							},
							"status": "METHOD NOT ALLOWED",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:53:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "65"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"METHOD_NOT_ALLOWED\",\n    \"message\": \"Refresh token only\"\n}"
						},
						{
							"name": "Get Refresh Token Missing Header",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{refresh_token}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/refresh",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"refresh"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:53:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "157"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"MISSING_PARAMETER\",\n    \"message\": \"Input payload validation failed\",\n    \"details\": {\n        \"Authorization\": \"Missing required parameter in the HTTP headers\"\n    }\n}"
						},
						{
							"name": "Get Refresh Token Invalid Authorization Header",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/refresh",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"refresh"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:54:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "87"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"TITLE\": \"INVALID_AUTHORIZATION_HEADER\"\n    },\n    \"message\": \"Invalid Auth Header\"\n}"
						},
						{
							"name": "Get Refresh Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{refresh_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/refresh",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:53:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "182"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTMwNTM5OTYsImlhdCI6MTU1MDQ2MTk5Niwic3ViIjoxLCJ0eXBlIjoiUkVGUkVTSCJ9.J0rj8foTbDx11wPs-1vPwWFcciLgiyGTPNza3xov9Ks\"\n}"
						}
					]
				},
				{
					"name": "Revoke Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baa8df04-8789-45cf-8d78-c2bb633dd8e4",
								"exec": [
									"// REVOKE ACCESS TOKEN TESTING",
									"pm.test(\"Make sure is return no_content\", () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{unit_test_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/token/revoke",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"auth",
								"token",
								"revoke"
							]
						},
						"description": "Revoke Access Token that has been Issued by the server"
					},
					"response": [
						{
							"name": "Revoke Access Token Revoked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/token/revoke",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"token",
										"revoke"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:54:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "64"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"REVOKED_TOKEN\",\n    \"message\": \"Token has been revoked\"\n}"
						}
					]
				},
				{
					"name": "Revoke Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76a2a3c3-8db7-47b3-88b2-41a4721e8b48",
								"exec": [
									"// REVOKE REFRESH TOKEN TESTING",
									"pm.test(\"Make sure is return no_content\", () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{unit_test_refresh_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/refresh/revoke",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"auth",
								"refresh",
								"revoke"
							]
						},
						"description": "Revoke Refresh Token that has been Issued by the server"
					},
					"response": [
						{
							"name": "Revoke Refresh Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{refresh_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/auth/refresh/revoke",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"auth",
										"refresh",
										"revoke"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.8"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Feb 2019 03:55:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "64"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"REVOKED_TOKEN\",\n    \"message\": \"Token has been revoked\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88599102-6e94-476d-91a9-dc701fd4e044",
								"exec": [
									"pm.test(\"Make sure return CREATED\", () =>{",
									"    pm.response.to.have.status(201)",
									"})",
									"",
									"pm.test(\"Make sure is wrapped inside data\", () => {",
									"    pm.response.to.have.jsonBody(\"data\")",
									"})",
									"",
									"pm.test(\"Make sure it returns user_id and wallet_id\", () => {",
									"    pm.expect(pm.response.json().data, ['user_id', 'wallet_id'])",
									"    pm.environment.set(\"user_id\",pm.response.json().data.user_id)",
									"    pm.environment.set(\"wallet_id\",pm.response.json().data.wallet_id)",
									"})",
									"",
									"postman.setNextRequest(\"Get User\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dfd49997-608d-405c-a314-4e2a6bbef8d7",
								"exec": [
									"var name = \"\";",
									"var length = 6;",
									"var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";",
									"for (var i = 0; i < length; i++)",
									"    name += possible.charAt(Math.floor(Math.random() * possible.length));",
									"",
									"pm.environment.set(\"name\", name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{name}}",
									"description": "(Required) Must Be unique, Minimum 5 Character Maximal 32 Character, only alphanumeric, . _ - allowed",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"description": "(Required) Must Be unique, Minimum 2 Character Maximal 70 Character, only alphabet allowed",
									"type": "text"
								},
								{
									"key": "phone_ext",
									"value": "62",
									"description": "(Required) Must Be Valid Phone Extension",
									"type": "text"
								},
								{
									"key": "phone_number",
									"value": "8123412{{$randomInt}}",
									"description": "(Required) Must Be unique, Minimum 2 Character Maximal 70 Character, only alphabet allowed",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"description": "(Required) Minimum 6 Character",
									"type": "text"
								},
								{
									"key": "pin",
									"value": "123456",
									"description": "(Required) must be 6 digit, only number allowed",
									"type": "text"
								},
								{
									"key": "role",
									"value": "USER",
									"description": "(Required) ADMIN / USER",
									"type": "text"
								},
								{
									"key": "label",
									"value": "PERSONAL",
									"type": "text"
								},
								{
									"key": "email",
									"value": "optional@test.com",
									"description": "(Optional) Must Be valid email",
									"type": "text",
									"disabled": true
								},
								{
									"key": "organization",
									"value": "MODANA",
									"description": "(Optional) Company Name",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								""
							]
						},
						"description": "Create user additionally with default Wallet and default Virtual Account"
					},
					"response": [
						{
							"name": "Create User Failed Missing Fields",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text",
											"disabled": true
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "279"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:57:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"name\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    },\n    \"message\": \"Input payload validation failed\"\n}"
						},
						{
							"name": "Create User Failed Admin Permission Required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\"     : \"jisoo\",\n\t\"name\"         : \"jisoo\",\n\t\"phone_ext\"    : \"62\",\n\t\"phone_number\" : \"81219642444\",\n\t\"email\"        : \"jisoo@blackpink.com\",\n\t\"password\"     : \"password\",\n\t\"pin\"          : \"123456\",\n\t\"role\"         : \"USER\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"users",
										""
									]
								}
							},
							"status": "FORBIDDEN",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Dec 2018 00:41:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Admin Permission Required\"\n}"
						},
						{
							"name": "Create User Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "133"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:56:52 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"user_id\": 9,\n        \"wallet_id\": \"1168122820\"\n    },\n    \"message\": \"User & Wallet Successfully Created\"\n}"
						},
						{
							"name": "Create User Duplicate Record",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "INTERNAL SERVER ERROR",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:57:17 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Duplicate Record\"\n}"
						}
					]
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c9a2dd6-9212-484c-bbde-7f681a2701cc",
								"exec": [
									"pm.test(\"Make sure return OK\", () =>{",
									"    pm.response.to.be.ok",
									"})",
									"",
									"pm.test(\"Make sure is wrapped inside data\", () => {",
									"    pm.response.to.have.jsonBody(\"data\")",
									"})",
									"",
									"postman.setNextRequest(\"Update User\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/:user_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "string"
								}
							]
						},
						"description": "Return user information"
					},
					"response": [
						{
							"name": "GET USER NOT FOUND",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/456",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										"456"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:58:34 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Record not found\"\n}"
						},
						{
							"name": "Get User",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/users/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"users",
										"{{user_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "gunicorn/19.9.0"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Mar 2019 03:33:27 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "339"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_info\": {\n        \"wallets\": [\n            {\n                \"id\": \"29345f40-337d-4d5d-88b0-cc51ef761571\",\n                \"status\": \"ACTIVE\",\n                \"balance\": 0\n            }\n        ],\n        \"id\": \"43ee127e-94dc-4eed-960d-eaadfd72c166\",\n        \"username\": \"jessicajung\",\n        \"name\": \"jessicajung\",\n        \"role\": \"USER\",\n        \"email\": \"optional@test.com\",\n        \"msisdn\": \"6281234123412\",\n        \"status\": \"ACTIVE\",\n        \"created_at\": \"2019-03-15 03:33:03\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88599102-6e94-476d-91a9-dc701fd4e044",
								"exec": [
									"pm.test(\"Make sure it returns no_content\", () => {",
									"    pm.response.to.have.status(204)",
									"})",
									"",
									"postman.setNextRequest(\"Remove User\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d8b26a82-4749-47e6-9cfe-4b325c7ffe35",
								"exec": [
									"var name = \"\";",
									"var length = 6;",
									"var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";",
									"for (var i = 0; i < length; i++)",
									"    name += possible.charAt(Math.floor(Math.random() * possible.length));",
									"",
									"pm.environment.set(\"name\", name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"description": "(Required) Must Be unique, Minimum 2 Character Maximal 70 Character, only alphabet allowed",
									"type": "text"
								},
								{
									"key": "phone_ext",
									"value": "62",
									"description": "(Required) Must Be Valid Phone Extension",
									"type": "text"
								},
								{
									"key": "phone_number",
									"value": "8123412{{$randomInt}}",
									"description": "(Required) Must Be unique, Minimum 2 Character Maximal 70 Character, only alphabet allowed",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"description": "(Required) Minimum 6 Character",
									"type": "text"
								},
								{
									"key": "email",
									"value": "optional@test.com",
									"description": "(Optional) Must Be valid email",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/:user_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "string"
								}
							]
						},
						"description": "Create user additionally with default Wallet and default Virtual Account"
					},
					"response": [
						{
							"name": "Create User Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "133"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:56:52 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"user_id\": 9,\n        \"wallet_id\": \"1168122820\"\n    },\n    \"message\": \"User & Wallet Successfully Created\"\n}"
						},
						{
							"name": "Create User Failed Admin Permission Required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\"     : \"jisoo\",\n\t\"name\"         : \"jisoo\",\n\t\"phone_ext\"    : \"62\",\n\t\"phone_number\" : \"81219642444\",\n\t\"email\"        : \"jisoo@blackpink.com\",\n\t\"password\"     : \"password\",\n\t\"pin\"          : \"123456\",\n\t\"role\"         : \"USER\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"users",
										""
									]
								}
							},
							"status": "FORBIDDEN",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Dec 2018 00:41:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Admin Permission Required\"\n}"
						},
						{
							"name": "Create User Duplicate Record",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "INTERNAL SERVER ERROR",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:57:17 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Duplicate Record\"\n}"
						},
						{
							"name": "Create User Failed Missing Fields",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text",
											"disabled": true
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "279"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:57:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"name\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    },\n    \"message\": \"Input payload validation failed\"\n}"
						}
					]
				},
				{
					"name": "Remove User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c9a2dd6-9212-484c-bbde-7f681a2701cc",
								"exec": [
									"pm.test(\"Make sure return NO_CONTENT\", () =>{",
									"    pm.response.to.have.status(204)",
									"})",
									"",
									"postman.setNextRequest(\"Get Users\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/:user_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "string"
								}
							]
						},
						"description": "Return user information"
					},
					"response": [
						{
							"name": "GET USER SUCCESS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										"{{user_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "484"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:58:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"user_information\": {\n            \"msisdn\": \"628122364134\",\n            \"username\": \"jennie\",\n            \"created_at\": \"2018-12-06 22:52:30\",\n            \"name\": \"jennie\",\n            \"status\": \"ACTIVE\",\n            \"email\": \"jennie@bp.com\",\n            \"role\": \"USER\"\n        },\n        \"wallet_information\": [\n            {\n                \"balance\": 0,\n                \"id\": 1168122820,\n                \"status\": \"ACTIVE\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "GET USER NOT FOUND",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/456",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										"456"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:58:34 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Record not found\"\n}"
						}
					]
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aed32c3e-554f-429e-a7bc-35c226ed1eca",
								"exec": [
									"pm.test(\"Make sure return OK\", () =>{",
									"    pm.response.to.be.ok",
									"})",
									"",
									"pm.test(\"Make sure is wrapped inside data\", () => {",
									"    pm.response.to.have.jsonBody(\"data\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								""
							]
						},
						"description": "Return all users in wallet system"
					},
					"response": [
						{
							"name": "GET USERS SUCCESS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "580"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:52:08 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2018-12-06 14:48:45\",\n            \"status\": \"ACTIVE\",\n            \"username\": \"MODANAADMIN\",\n            \"email\": \"admin@modana.id\",\n            \"msisdn\": \"6281212341234\",\n            \"name\": \"Modana Admin\",\n            \"role\": \"ADMIN\"\n        },\n        {\n            \"created_at\": \"2018-12-06 22:51:11\",\n            \"status\": \"ACTIVE\",\n            \"username\": \"wendy\",\n            \"email\": \"wendy@redvelvet.com\",\n            \"msisdn\": \"628122254134\",\n            \"name\": \"wendy\",\n            \"role\": \"USER\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "041bc4af-fa77-45b7-b7d8-78f39e3ce1d8",
						"type": "text/javascript",
						"exec": [
							"postman.setNextRequest(\"Get Access Token\")"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "62048afb-999a-4aa4-a1d6-0a18b893a04e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Bank Account",
			"item": [
				{
					"name": "Create Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39f08a2f-7ba4-4203-9c78-b45b5104efdd",
								"exec": [
									"response = pm.response.json()",
									"",
									"pm.test(\"Make sure return CREATED\", () =>{",
									"    pm.response.to.have.status(201)",
									"})",
									"",
									"pm.test(\"Make sure is wrapped inside data\", () => {",
									"    pm.response.to.have.jsonBody(\"data\")",
									"})",
									"",
									"pm.test(\"should data contain bank_account_id\", () => {",
									"    pm.expect(response, [\"bank_account_id\"]); ",
									"    pm.environment.set(\"bank_account_id\",response.data.bank_account_id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f59df6fd-0939-4283-9a27-6415142aeb57",
								"exec": [
									"var name = \"\";",
									"var length = 12;",
									"var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";",
									"for (var i = 0; i < length; i++)",
									"    name += possible.charAt(Math.floor(Math.random() * possible.length));",
									"    ",
									"var bank_list = [",
									"    \"009\", \"002\", \"014\", \"542\", \"050\"",
									"];",
									"var random_pick = Math.floor(Math.random() * bank_list.length);",
									"",
									"pm.environment.set(\"bank_account_name\", name);",
									"pm.environment.set(\"bank_account_label\", \"my bank account\" + name);",
									"pm.environment.set(\"bank_account_code\", bank_list[random_pick]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "account_no",
									"value": "{{$timestamp}}",
									"description": "(Required) Must be unique, Bank Account Number",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{bank_account_name}}",
									"description": "(Required) Must be unique, Bank Account owner name",
									"type": "text"
								},
								{
									"key": "label",
									"value": "{{bank_account_label}}",
									"description": "(Required) Bank Account label",
									"type": "text"
								},
								{
									"key": "bank_id",
									"value": "{{bank_id}}",
									"description": "(Required) Must be valid, only integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/:user_id/bank_account/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								":user_id",
								"bank_account",
								""
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "string"
								}
							]
						},
						"description": "Add bank account information to Wallet User"
					},
					"response": [
						{
							"name": "Create Bank Account Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account_no\": \"1111111110\",\n\t\"name\"      : \"Irene\",\n\t\"label\"     : \"Irene Bank Account\",\n\t\"bank_code\" : \"009\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/users/{{user_id}}/bank_account/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"users",
										"{{user_id}}",
										"bank_account",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "52"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 20 Dec 2018 05:09:44 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Bank Account Sucessfully Added\"\n}"
						}
					]
				},
				{
					"name": "Update Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39f08a2f-7ba4-4203-9c78-b45b5104efdd",
								"exec": [
									"pm.test(\"should return NO_CONTENT\", () => {",
									"    pm.response.to.have.status(204)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f59df6fd-0939-4283-9a27-6415142aeb57",
								"exec": [
									"var name = \"\";",
									"var length = 12;",
									"var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";",
									"for (var i = 0; i < length; i++)",
									"    name += possible.charAt(Math.floor(Math.random() * possible.length));",
									"    ",
									"var bank_list = [",
									"    \"009\", \"002\", \"014\", \"542\", \"050\"",
									"];",
									"var random_pick = Math.floor(Math.random() * bank_list.length);",
									"",
									"pm.environment.set(\"bank_account_name\", name);",
									"pm.environment.set(\"bank_account_label\", \"my bank account\" + name);",
									"pm.environment.set(\"bank_account_code\", bank_list[random_pick]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "account_no",
									"value": "{{$timestamp}}",
									"description": "(Required) Must be unique, Bank Account Number",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{bank_account_name}}",
									"description": "(Required) Must be unique, Bank Account owner name",
									"type": "text"
								},
								{
									"key": "label",
									"value": "{{bank_account_label}}",
									"description": "(Required) Bank Account label",
									"type": "text"
								},
								{
									"key": "bank_code",
									"value": "{{bank_account_code}}",
									"description": "(Required) Must be valid, only integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/:user_id/bank_account/:bank_account_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								":user_id",
								"bank_account",
								":bank_account_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "string"
								},
								{
									"key": "bank_account_id",
									"value": "{{bank_account_id}}",
									"type": "string"
								}
							]
						},
						"description": "Add bank account information to Wallet User"
					},
					"response": [
						{
							"name": "Create Bank Account Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account_no\": \"1111111110\",\n\t\"name\"      : \"Irene\",\n\t\"label\"     : \"Irene Bank Account\",\n\t\"bank_code\" : \"009\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/users/{{user_id}}/bank_account/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"users",
										"{{user_id}}",
										"bank_account",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "52"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 20 Dec 2018 05:09:44 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Bank Account Sucessfully Added\"\n}"
						}
					]
				},
				{
					"name": "Get Bank Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/:user_id/bank_account/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								":user_id",
								"bank_account",
								""
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "string"
								}
							]
						},
						"description": "Get all bank account information"
					},
					"response": [
						{
							"name": "Get Bank Accounts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/{{user_id}}/bank_account/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										"{{user_id}}",
										"bank_account",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "192"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Sat, 15 Dec 2018 08:40:13 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"label\": \"Irene Bank Account\",\n            \"bank_name\": \"BANK BNI\",\n            \"name\": \"Irene\",\n            \"account_no\": \"1111111110\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Remove Bank Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/users/:user_id/bank_account/:bank_account_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"users",
								":user_id",
								"bank_account",
								":bank_account_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "string"
								},
								{
									"key": "bank_account_id",
									"value": "{{bank_account_id}}",
									"type": "string"
								}
							]
						},
						"description": "Remove Bank Account that has been added"
					},
					"response": [
						{
							"name": "Remove Bank Account Failed Record not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/users/{{user_id}}/bank_account/8",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"users",
										"{{user_id}}",
										"bank_account",
										"8"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 20 Dec 2018 05:13:10 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Record not found\"\n}"
						}
					]
				}
			],
			"description": "This is folder contain all API for Add / Edit / Delete Bank Account Information",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d78dfb98-91ea-4648-8a98-293515ec4f12",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4c05d243-2c79-4767-8039-f49559d9f2d3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Wallet",
			"item": [
				{
					"name": "Pin",
					"item": [
						{
							"name": "Check Pin",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) must be 6 digit, only number allowed",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/:wallet_id/pin/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										":wallet_id",
										"pin",
										""
									],
									"variable": [
										{
											"key": "wallet_id",
											"value": "{{wallet_id}}",
											"type": "string"
										}
									]
								},
								"description": "Change User Wallet Pin"
							},
							"response": [
								{
									"name": "Check Pin",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "pin",
													"value": "111111",
													"description": "(Required) must be 6 digit, only number allowed",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/pin/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"pin",
												""
											]
										}
									},
									"status": "UNPROCESSABLE ENTITY",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Mon, 18 Feb 2019 03:49:07 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"INCORRECT_PIN\",\n    \"message\": \"Incorrect Pin\"\n}"
								},
								{
									"name": "Check Pin",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) must be 6 digit, only number allowed",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/pin/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"pin",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "34"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Mon, 18 Feb 2019 03:48:46 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"PIN VERIFIED\"\n}"
								}
							]
						},
						{
							"name": "Change Pin",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "old_pin",
											"value": "000000",
											"description": "(Required) Old Pin, must be 6 digit, only number allowed",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) New Pin, must be 6 digit, only number allowed",
											"type": "text"
										},
										{
											"key": "confirm_pin",
											"value": "123456",
											"description": "(Required) New Pin, must be 6 digit, only number allowed, Pin == confirm_pin",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/pin/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"pin",
										""
									]
								},
								"description": "Change User Wallet Pin"
							},
							"response": [
								{
									"name": "Change Pin Unmatched Pin",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "pin",
													"value": "111111",
													"description": "(Required) New Pin, must be 6 digit, only number allowed",
													"type": "text"
												},
												{
													"key": "confirm_pin",
													"value": "111111",
													"description": "(Required) New Pin, must be 6 digit, only number allowed, Pin == confirm_pin",
													"type": "text"
												},
												{
													"key": "old_pin",
													"value": "123456",
													"description": "(Required) Old Pin, must be 6 digit, only number allowed",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/pin/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"pin",
												""
											]
										}
									},
									"status": "UNPROCESSABLE ENTITY",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.15.8"
										},
										{
											"key": "Date",
											"value": "Mon, 18 Feb 2019 04:57:23 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "67"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"UNMATCH_PIN\",\n    \"message\": \"Unmatch Pin and Confirm Pin\"\n}"
								}
							]
						},
						{
							"name": "Send Forgot PIN OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d991db2-8856-4c07-bba5-78a834ffee12",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Send Forgot OTP\");",
											"",
											"pm.test(\"should data contain otp_key and otp_code\", () => {",
											"    pm.expect(response.data, [\"otp_key\",\"otp_code\"]); ",
											"    pm.environment.set(\"otp_key\",response.data.otp_key);",
											"    pm.environment.set(\"otp_code\",response.data.otp_code);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/forgot/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"forgot",
										""
									]
								},
								"description": "Sending SMS Contain OTP for Forgot PIN"
							},
							"response": [
								{
									"name": "SEND OTP SUCCESS",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/wallets/{{wallet_id}}/forgot/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"wallets",
												"{{wallet_id}}",
												"forgot",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "143"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Dec 2018 06:43:21 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"otp_key\": \"a59b473b17b6b01dbd847216f4396a9b\"\n    },\n    \"message\": \"Forgot OTP Code has been sent to 6281219644314\"\n}"
								},
								{
									"name": "SEND OTP FAILED PENDING OTP",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/wallets/{{wallet_id}}/forgot/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"wallets",
												"{{wallet_id}}",
												"forgot",
												""
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Dec 2018 06:44:23 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"There's pending Forgot OTP, Please wait 2 minutes before request again\"\n}"
								}
							]
						},
						{
							"name": "Verify Forgot PIN OTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) must be 6 digit, only number allowed",
											"type": "text"
										},
										{
											"key": "otp_key",
											"value": "{{otp_key}}",
											"description": "(Required) OTP KEY, received from send forgot PIN OTP",
											"type": "text"
										},
										{
											"key": "otp_code",
											"value": "{{otp_code}}",
											"description": "(Required) OTP CODE, received from send forgot PIN OTP",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/forgot/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"forgot",
										""
									]
								},
								"description": "Verify forgot PIN by entering OTP Key and OTP Code"
							},
							"response": [
								{
									"name": "FORGOT PIN FAILED ALREADY VERIFIED",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "pin",
													"value": "111111",
													"description": "(Required) The new pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "otp_key",
													"value": "{{otp_key}}",
													"description": "(Required) otp_key got from send otp API",
													"type": "text"
												},
												{
													"key": "otp_code",
													"value": "8894",
													"description": "(Required) The otp code that been sent to user phone number",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/wallets/{{wallet_id}}/forgot/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"wallets",
												"{{wallet_id}}",
												"forgot",
												""
											]
										}
									},
									"status": "BAD REQUEST",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "41"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Dec 2018 06:43:58 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"OTP Already verified\"\n}"
								},
								{
									"name": "FORGOT PIN SUCCESS",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "pin",
													"value": "111111",
													"description": "(Required) The new pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "otp_key",
													"value": "{{otp_key}}",
													"description": "(Required) otp_key got from send otp API",
													"type": "text"
												},
												{
													"key": "otp_code",
													"value": "8894",
													"description": "(Required) The otp code that been sent to user phone number",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/wallets/{{wallet_id}}/forgot/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"wallets",
												"{{wallet_id}}",
												"forgot",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Dec 2018 06:43:48 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Forgot Pin Success\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Transfer",
					"item": [
						{
							"name": "Transfer Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2aaa9d67-b9fb-4cb2-8ca2-d33f23196eca",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) Must Be Valid Phone Extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "81299264150",
											"description": "(Required) Must Be unique, Minimum 2 Character Maximal 70 Character, only alphabet allowed",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/transfer/checkout",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"transfer",
										"checkout"
									]
								},
								"description": "Exchanging User phone number with User information"
							},
							"response": [
								{
									"name": "Transfer Checkout",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) Must Be Valid Phone Extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "81299264150",
													"description": "(Required) Must Be unique, Minimum 2 Character Maximal 70 Character, only alphabet allowed",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/transfer/checkout",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"transfer",
												"checkout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Fri, 15 Mar 2019 03:46:30 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "142"
										}
									],
									"cookie": [],
									"body": "{\n    \"user_info\": {\n        \"wallets\": [\n            {\n                \"status\": \"ACTIVE\",\n                \"id\": \"a4cc9062-81df-4316-aea7-3233b0dbcd69\"\n            }\n        ],\n        \"msisdn\": \"6281299264150\",\n        \"name\": \"Priska\"\n    }\n}"
								}
							]
						},
						{
							"name": "Virtual Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2aaa9d67-b9fb-4cb2-8ca2-d33f23196eca",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) must be 6 digit, only number allowed",
											"type": "text"
										},
										{
											"key": "amount",
											"value": "1000",
											"description": "(Required) cannot be less than zero",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "Some Transfer notes",
											"description": "(Optional) Transfer Notes",
											"type": "text"
										},
										{
											"key": "types",
											"value": "PAYROLL",
											"description": "(Optional) Transfer Types",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/transfer/:wallet_id",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"transfer",
										":wallet_id"
									],
									"variable": [
										{
											"key": "wallet_id",
											"value": "a6f8ad0d-e198-40ff-b353-6deb48da563d",
											"type": "string"
										}
									]
								},
								"description": "Transfer Money Between Wallet / Virtual Account"
							},
							"response": []
						},
						{
							"name": "Bank Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2aaa9d67-b9fb-4cb2-8ca2-d33f23196eca",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) must be 6 digit, only number allowed",
											"type": "text"
										},
										{
											"key": "amount",
											"value": "100000",
											"description": "(Required) cannot be less than zero",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "Some Transfer notes",
											"description": "(Optional) Transfer Notes",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/transfer/bank/{{bank_account_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"transfer",
										"bank",
										"{{bank_account_id}}"
									]
								},
								"description": "Transfer Money Between Wallet to Real Bank Account"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Withdraw",
					"item": [
						{
							"name": "Request Withdraw",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1003bc75-8012-40c1-8d82-c7819557b865",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Request Withdraw\");",
											"",
											"pm.test(\"should return virtual account no and epoch\", () => {",
											"    pm.environment.set(\"va_debit_no\",response.data.virtual_account);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) must be 6 digit, only number allowed",
											"type": "text"
										},
										{
											"key": "amount",
											"value": "100000",
											"description": "(Optiona) if its not set, it will withdraw everything on wallet balance",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/withdraw/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"withdraw",
										""
									]
								},
								"description": "Cardless Withdraw to BNI ATM"
							},
							"response": [
								{
									"name": "Request Withdraw",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) must be 6 digit, only number allowed",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "100000",
													"description": "(Optiona) if its not set, it will withdraw everything on wallet balance",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/withdraw/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"withdraw",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2019 07:36:57 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "99"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"virtual_account\": \"9889909919090768\",\n        \"valid_until\": \"1554622917\",\n        \"amount\": 100000\n    }\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Transaction",
					"item": [
						{
							"name": "Transaction History",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ee971d35-a551-4cb6-9354-35ab396e0775",
										"exec": [
											"var today = new Date();",
											"var yyyy = today.getFullYear();",
											"var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!",
											"var dd = String(today.getDate()).padStart(2, '0');",
											"",
											"today = yyyy + '/' + mm + '/' + dd;",
											"postman.setEnvironmentVariable(\"today_transaction\", today)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/transactions?flag=ALL&start_date={{today_transaction}}&end_date={{today_transaction}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"transactions"
									],
									"query": [
										{
											"key": "flag",
											"value": "ALL",
											"description": "Transaction Type ( ALL / IN / OUT)"
										},
										{
											"key": "start_date",
											"value": "{{today_transaction}}",
											"description": "yyyy/mm/dd"
										},
										{
											"key": "end_date",
											"value": "{{today_transaction}}",
											"description": "yyyy/mm/dd"
										}
									]
								},
								"description": "Return wallet transaction history"
							},
							"response": [
								{
									"name": "Success Transaction History Examples",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/transactions?flag=ALL&start_date=2019/01/10&end_date=2019/01/10",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"transactions"
											],
											"query": [
												{
													"key": "flag",
													"value": "ALL",
													"description": "Transaction Type ( ALL / IN / OUT)"
												},
												{
													"key": "start_date",
													"value": "2019/01/10",
													"description": "yyyy/mm/dd"
												},
												{
													"key": "end_date",
													"value": "2019/01/10",
													"description": "yyyy/mm/dd"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1258"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 10 Jan 2019 15:11:23 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2019-01-10 14:30:30\",\n            \"id\": \"cc84ad16-a0ce-4137-9cf3-caf2e2e9619a\",\n            \"amount\": 50000,\n            \"wallet_id\": \"1111325297\",\n            \"notes\": \"Top up balance 50000.0 from Virtual Account\",\n            \"transaction_type\": \"DEPOSIT\"\n        },\n        {\n            \"created_at\": \"2019-01-10 14:30:30\",\n            \"id\": \"c5d6e984-243b-46e4-a5e0-1b9940d51349\",\n            \"amount\": 50000,\n            \"wallet_id\": \"1111325297\",\n            \"notes\": \"Top up balance 50000.0 from Virtual Account\",\n            \"transaction_type\": \"DEPOSIT\"\n        },\n        {\n            \"created_at\": \"2019-01-10 14:30:30\",\n            \"id\": \"a2489e56-b13c-4eb6-b511-ec5d5d656f15\",\n            \"amount\": 50000,\n            \"wallet_id\": \"1111325297\",\n            \"notes\": \"Top up balance 50000.0 from Virtual Account\",\n            \"transaction_type\": \"DEPOSIT\"\n        },\n        {\n            \"created_at\": \"2019-01-10 14:30:30\",\n            \"id\": \"0fad9ead-4463-4859-8aeb-f5669009f094\",\n            \"amount\": -50000,\n            \"wallet_id\": \"1111325297\",\n            \"notes\": \"Withdraw balance -50000 from Virtual Account\",\n            \"transaction_type\": \"WITHDRAW\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Transaction Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/transactions/:transaction_id",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"transactions",
										":transaction_id"
									],
									"variable": [
										{
											"key": "transaction_id",
											"value": "bfeead5b-4b19-41d0-aac4-673fb7ea4871",
											"type": "string"
										}
									]
								},
								"description": "Return transaction details"
							},
							"response": [
								{
									"name": "Success Transaction Details Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/transactions/a2489e56-b13c-4eb6-b511-ec5d5d656f15",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"transactions",
												"a2489e56-b13c-4eb6-b511-ec5d5d656f15"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "553"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 10 Jan 2019 15:11:07 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"created_at\": \"2019-01-10 14:30:30\",\n        \"id\": \"a2489e56-b13c-4eb6-b511-ec5d5d656f15\",\n        \"amount\": 50000,\n        \"wallet_id\": \"1111325297\",\n        \"notes\": \"Top up balance 50000.0 from Virtual Account\",\n        \"payment_details\": {\n            \"source\": \"9889909825214406\",\n            \"to\": \"1111325297\",\n            \"reference_number\": \"12345\",\n            \"payment_amount\": 50000,\n            \"payment_type\": \"CREDIT\",\n            \"status\": \"COMPLETED\"\n        },\n        \"transaction_type\": \"DEPOSIT\"\n    }\n}"
								}
							]
						},
						{
							"name": "Refund Transaction",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/transactions/refund/:transaction_id",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"transactions",
										"refund",
										":transaction_id"
									],
									"variable": [
										{
											"key": "transaction_id",
											"value": "982b7d5d-4c58-437e-81ff-e5ff9dbcf419",
											"type": "string"
										}
									]
								},
								"description": "Return transaction details"
							},
							"response": [
								{
									"name": "Refund Transaction",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/refund/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"refund",
												":transaction_id"
											],
											"variable": [
												{
													"key": "transaction_id",
													"value": "888c06ec-9063-4e24-b3d9-b2c282a04548"
												}
											]
										}
									},
									"status": "ACCEPTED",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Sat, 06 Apr 2019 14:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "59"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"36849bf5-caa4-4d2a-94e9-6cadbb939af8\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "QR Code",
					"item": [
						{
							"name": "Get User QR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c9a2dd6-9212-484c-bbde-7f681a2701cc",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Get User QR\");",
											"",
											"pm.test(\"should data contain qr_string\", () => {",
											"    pm.expect(response.data, [\"qr_string\"]); ",
											"    pm.environment.set(\"qr_string\",response.qr_string);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/qr/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"qr",
										""
									]
								},
								"description": "Generate Base 64 QR Code Stirng"
							},
							"response": [
								{
									"name": "Get User QR Examples",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/qr",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"qr"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "112"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Wed, 16 Jan 2019 05:30:25 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"qr_string\": \"-SrEcmTCb-Cp0OHGQlO9RWqDCIYRlRH9ijL0Kpnc_Gu0D7ARyxpznrUekTZAqjdv\"\n    }\n}"
								}
							]
						},
						{
							"name": "QR Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c9a2dd6-9212-484c-bbde-7f681a2701cc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"qr_string\" : \"{{qr_string}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/qr/checkout",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"{{wallet_id}}",
										"qr",
										"checkout"
									]
								},
								"description": "API transfer via QR Code"
							},
							"response": [
								{
									"name": "QR Checkout",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qr_string\" : \"{{qr_string}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/qr/checkout",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"wallets",
												"{{wallet_id}}",
												"qr",
												"checkout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Fri, 15 Mar 2019 08:20:35 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "61"
										}
									],
									"cookie": [],
									"body": "{\n    \"user_info\": {\n        \"msisdn\": \"6281299264150\",\n        \"name\": \"Priska\"\n    }\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Create Wallet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84de859a-a7c4-421a-b317-03512f2d5e55",
								"exec": [
									"response = pm.response.json()",
									"console.log(\"Create Wallet\");",
									"",
									"pm.test(\"should data contain wallet_id\", () => {",
									"    pm.expect(response.data, [\"user_id\",\"wallet_id\"]); ",
									"    pm.environment.set(\"wallet_id\",response.data.wallet_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "label",
									"value": "Wallet Label",
									"description": "(Required) Wallet Label",
									"type": "text"
								},
								{
									"key": "pin",
									"value": "123456",
									"description": "(Required) must be 6 digit, only number allowed",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"wallets",
								""
							]
						},
						"description": "This is API for creating additional Wallet for user, so it's possible for one user to have multiple wallet"
					},
					"response": [
						{
							"name": "Create Wallet",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\"   : \"my wallet\",\n    \"pin\"    : \"123456\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										""
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "49"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Feb 2019 14:52:19 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"wallet_id\": \"2\"\n    }\n}"
						}
					]
				},
				{
					"name": "Remove Wallet",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/:wallet_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"wallets",
								":wallet_id"
							],
							"variable": [
								{
									"key": "wallet_id",
									"value": "{{wallet_id}}"
								}
							]
						},
						"description": "This is API for getting Wallet details based on user wallet id"
					},
					"response": [
						{
							"name": "Get Wallet",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/1",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "123"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Feb 2019 14:46:08 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"wallet\": {\n        \"id\": \"1\",\n        \"balance\": 0,\n        \"status\": \"ACTIVE\"\n    },\n    \"virtual_account\": []\n}"
						}
					]
				},
				{
					"name": "Get Balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/{{wallet_id}}/balance/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"wallets",
								"{{wallet_id}}",
								"balance",
								""
							]
						},
						"description": "This is API for getting user balance"
					},
					"response": [
						{
							"name": "GET BALANCE FAILED",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu\n\n6 Digit number only",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/wallets/{{wallet_id}}/balance/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"wallets",
										"{{wallet_id}}",
										"balance",
										""
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 23:14:14 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Incorrect Pin\"\n}"
						},
						{
							"name": "GET BALANCE SUCCESS",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu\n\n6 Digit number only",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/wallets/{{wallet_id}}/balance/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"wallets",
										"{{wallet_id}}",
										"balance",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "73"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 23:14:32 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1182986925,\n        \"balance\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "Get Wallet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea0edcae-e1f9-4009-bf40-f7bbcbed005d",
								"exec": [
									"response = pm.response.json()",
									"console.log(\"Get Wallet\");",
									"",
									"pm.test(\"should contain virtual account no and name\", () => {",
									"    pm.environment.set(\"va_credit_no\",response.data.virtual_accounts[0].account_no);",
									"    pm.environment.set(\"va_name\",response.data.virtual_accounts[0].name);",
									"    pm.environment.set(\"va_credit_trx_id\",response.data.virtual_accounts[0].trx_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/:wallet_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"wallets",
								":wallet_id"
							],
							"variable": [
								{
									"key": "wallet_id",
									"value": "{{wallet_id}}",
									"type": "string"
								}
							]
						},
						"description": "This is API for getting Wallet details based on user wallet id"
					},
					"response": [
						{
							"name": "Get Wallet",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/1",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"wallets",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "123"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Feb 2019 14:46:08 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"wallet\": {\n        \"id\": \"1\",\n        \"balance\": 0,\n        \"status\": \"ACTIVE\"\n    },\n    \"virtual_account\": []\n}"
						}
					]
				},
				{
					"name": "Get Wallets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/wallets/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"wallets",
								""
							]
						},
						"description": "This is API for getting all wallet based on user id"
					},
					"response": [
						{
							"name": "GET WALLETS SUCCESS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/wallets/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"wallets",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "463"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 23:14:01 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1158946053,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1180129140,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1168122820,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1182986925,\n            \"balance\": 0\n        }\n    ]\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e2dd0338-2758-4fdf-aa46-4674d79d5fdf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "430873ee-adf5-4b21-8866-6d82dbc0ecd3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Bank",
			"item": [
				{
					"name": "BNI",
					"item": [
						{
							"name": "Get Balance",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/balance/:account_no",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"banks",
										"bni",
										"balance",
										":account_no"
									],
									"variable": [
										{
											"key": "account_no",
											"value": "3571113886",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get Host Balance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/balance/0115476117",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"banks",
												"bni",
												"balance",
												"0115476117"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Mar 2019 02:09:10 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "111"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"bank_account_info\": {\n            \"customer_name\": \"Bpk ROBERT NARO ROBERT NARO\",\n            \"balance\": \"24075953878640\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Account Information",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/inquiry/:account_no",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"banks",
										"bni",
										"inquiry",
										":account_no"
									],
									"variable": [
										{
											"key": "account_no",
											"value": "0115476117",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get Host Balance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/balance/0115476117",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"banks",
												"bni",
												"balance",
												"0115476117"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Mar 2019 02:09:10 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "111"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"bank_account_info\": {\n            \"customer_name\": \"Bpk ROBERT NARO ROBERT NARO\",\n            \"balance\": \"24075953878640\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Payment Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/payment/:ref_number",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"banks",
										"bni",
										"payment",
										":ref_number"
									],
									"variable": [
										{
											"key": "ref_number",
											"value": "201903110246596640",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get Payment Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/payment/:ref_number",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"banks",
												"bni",
												"payment",
												":ref_number"
											],
											"variable": [
												{
													"key": "ref_number",
													"value": "201903110246596640"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Mar 2019 02:47:32 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"payment_info\": {\n            \"status\": \"Y\",\n            \"source_account\": \"0115476117\",\n            \"destination_account\": \"0115476151\",\n            \"amount\": \"100000\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Hold Amount",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "account_no",
											"value": "0115476117",
											"type": "text"
										},
										{
											"key": "amount",
											"value": "101",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/payment/:ref_number",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"banks",
										"bni",
										"payment",
										":ref_number"
									],
									"variable": [
										{
											"key": "ref_number",
											"value": "201903110246596649",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get Payment Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/payment/:ref_number",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"banks",
												"bni",
												"payment",
												":ref_number"
											],
											"variable": [
												{
													"key": "ref_number",
													"value": "201903110246596640"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Mar 2019 02:47:32 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"payment_info\": {\n            \"status\": \"Y\",\n            \"source_account\": \"0115476117\",\n            \"destination_account\": \"0115476151\",\n            \"amount\": \"100000\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Do Payment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "method",
											"value": "0",
											"description": "(Required) BNI Payment Method : \n0 -> In-House\n1 -> RTGS \n2 -> Kliring\n",
											"type": "text"
										},
										{
											"key": "source",
											"value": "3571113660",
											"description": "(Required) BNI Account Number",
											"type": "text"
										},
										{
											"key": "destination",
											"value": "8924667068793822",
											"description": "(Required) BNI Account Number",
											"type": "text"
										},
										{
											"key": "amount",
											"value": "912000",
											"description": "(Required) BNI Transfer Amount",
											"type": "text"
										},
										{
											"key": "email",
											"value": "",
											"description": "(Optional) Email Address",
											"type": "text"
										},
										{
											"key": "account_name",
											"value": "",
											"description": "(Optional) Destination Account name",
											"type": "text"
										},
										{
											"key": "address",
											"value": "",
											"description": "(Optional) Destination Account address",
											"type": "text"
										},
										{
											"key": "charge_mode",
											"value": "",
											"description": "(Optional) BNI Charging Mode",
											"type": "text"
										},
										{
											"key": "ref_number",
											"value": "",
											"description": "(Optional) BNI Customer Reference Number",
											"type": "text"
										},
										{
											"key": "destination_bank_code",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/payment/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"banks",
										"bni",
										"payment",
										""
									]
								}
							},
							"response": [
								{
									"name": "Get Payment Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/payment/:ref_number",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"banks",
												"bni",
												"payment",
												":ref_number"
											],
											"variable": [
												{
													"key": "ref_number",
													"value": "201903110246596640"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Mar 2019 02:47:32 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"payment_info\": {\n            \"status\": \"Y\",\n            \"source_account\": \"0115476117\",\n            \"destination_account\": \"0115476151\",\n            \"amount\": \"100000\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Interbank",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f650b46-503c-4c36-8e86-4175e37ac107",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Interbank Inquiry\");",
											"",
											"pm.test(\"should data contain account_no and account_name\", () => {",
											"    pm.expect(response, [\"account_no\",\"account_name\"]); ",
											"    pm.environment.set(\"account_no\",response.data.inquiry_info.account_no);",
											"    pm.environment.set(\"account_name\",response.data.inquiry_info.account_name);",
											"    pm.environment.set(\"transfer_bank_name\",response.data.inquiry_info.transfer_bank_name);",
											"    pm.environment.set(\"transfer_ref\",response.data.inquiry_info.transfer_ref);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/interbank/payment?source=0316031099&bank_code=542&destination=123456",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"banks",
										"bni",
										"interbank",
										"payment"
									],
									"query": [
										{
											"key": "source",
											"value": "0316031099"
										},
										{
											"key": "bank_code",
											"value": "542"
										},
										{
											"key": "destination",
											"value": "123456"
										},
										{
											"key": "ref_number",
											"value": null,
											"description": "(Optional) BNI Customer Reference Number",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Get Payment Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/payment/:ref_number",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"banks",
												"bni",
												"payment",
												":ref_number"
											],
											"variable": [
												{
													"key": "ref_number",
													"value": "201903110246596640"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Mar 2019 02:47:32 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"payment_info\": {\n            \"status\": \"Y\",\n            \"source_account\": \"0115476117\",\n            \"destination_account\": \"0115476151\",\n            \"amount\": \"100000\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Interbank Payment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "source",
											"value": "0115476117",
											"description": "(Required) BNI Account Number",
											"type": "text"
										},
										{
											"key": "destination",
											"value": "{{account_no}}",
											"description": "(Required) Bank Account Number",
											"type": "text"
										},
										{
											"key": "destination_name",
											"value": "{{account_name}}",
											"description": "(Optional) Destination Account name",
											"type": "text"
										},
										{
											"key": "amount",
											"value": "100",
											"description": "(Required) Transfer Amount",
											"type": "text"
										},
										{
											"key": "bank_code",
											"value": "014",
											"description": "(Required) Bank Code",
											"type": "text"
										},
										{
											"key": "bank_name",
											"value": "{{transfer_bank_name}}",
											"description": "(Required) Bank Name",
											"type": "text"
										},
										{
											"key": "transfer_ref",
											"value": "{{transfer_ref}}",
											"description": "(Optional) BNI Charging Mode",
											"type": "text"
										},
										{
											"key": "ref_number",
											"value": "",
											"description": "(Optional) BNI Customer Reference Number",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/interbank/payment/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"banks",
										"bni",
										"interbank",
										"payment",
										""
									]
								}
							},
							"response": [
								{
									"name": "Get Payment Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/bni/payment/:ref_number",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"banks",
												"bni",
												"payment",
												":ref_number"
											],
											"variable": [
												{
													"key": "ref_number",
													"value": "201903110246596640"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Mar 2019 02:47:32 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"payment_info\": {\n            \"status\": \"Y\",\n            \"source_account\": \"0115476117\",\n            \"destination_account\": \"0115476151\",\n            \"amount\": \"100000\"\n        }\n    }\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Bank list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f6d70157-a784-4673-90b4-a5a88057b720",
								"exec": [
									"pm.test(\"Make sure it bank_id\", () => {",
									"    pm.environment.set(\"bank_id\",pm.response.json().data[0].id)",
									"})",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/banks/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"banks",
								""
							]
						}
					},
					"response": [
						{
							"name": "Get Bank list Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/banks/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"banks",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "11459"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Sat, 15 Dec 2018 04:08:38 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"code\": 3,\n            \"name\": \"BANK EKSPOR INDONESIA\"\n        },\n        {\n            \"code\": 8,\n            \"name\": \"BANK MANDIRI\"\n        },\n        {\n            \"code\": 9,\n            \"name\": \"BANK BNI\"\n        },\n        {\n            \"code\": 11,\n            \"name\": \"BANK DANAMON\"\n        },\n        {\n            \"code\": 13,\n            \"name\": \"PERMATA BANK\"\n        },\n        {\n            \"code\": 14,\n            \"name\": \"BANK BCA\"\n        },\n        {\n            \"code\": 16,\n            \"name\": \"BANK BII\"\n        },\n        {\n            \"code\": 19,\n            \"name\": \"BANK PANIN\"\n        },\n        {\n            \"code\": 20,\n            \"name\": \"BANK ARTA NIAGA KENCANA\"\n        },\n        {\n            \"code\": 22,\n            \"name\": \"BANK NIAGA\"\n        },\n        {\n            \"code\": 23,\n            \"name\": \"BANK BUANA IND\"\n        },\n        {\n            \"code\": 26,\n            \"name\": \"BANK LIPPO\"\n        },\n        {\n            \"code\": 28,\n            \"name\": \"BANK NISP\"\n        },\n        {\n            \"code\": 30,\n            \"name\": \"AMERICAN EXPRESS BANK LTD\"\n        },\n        {\n            \"code\": 31,\n            \"name\": \"CITIBANK N.A.\"\n        },\n        {\n            \"code\": 32,\n            \"name\": \"JP. MORGAN CHASE BANK, N.A.\"\n        },\n        {\n            \"code\": 33,\n            \"name\": \"BANK OF AMERICA, N.A\"\n        },\n        {\n            \"code\": 34,\n            \"name\": \"ING INDONESIA BANK\"\n        },\n        {\n            \"code\": 36,\n            \"name\": \"BANK MULTICOR TBK.\"\n        },\n        {\n            \"code\": 37,\n            \"name\": \"BANK ARTHA GRAHA\"\n        },\n        {\n            \"code\": 39,\n            \"name\": \"BANK CREDIT AGRICOLE INDOSUEZ\"\n        },\n        {\n            \"code\": 40,\n            \"name\": \"THE BANGKOK BANK COMP. LTD\"\n        },\n        {\n            \"code\": 41,\n            \"name\": \"THE HONGKONG & SHANGHAI B.C.\"\n        },\n        {\n            \"code\": 42,\n            \"name\": \"THE BANK OF TOKYO MITSUBISHI UFJ LTD\"\n        },\n        {\n            \"code\": 45,\n            \"name\": \"BANK SUMITOMO MITSUI INDONESIA\"\n        },\n        {\n            \"code\": 46,\n            \"name\": \"BANK DBS INDONESIA\"\n        },\n        {\n            \"code\": 47,\n            \"name\": \"BANK RESONA PERDANIA\"\n        },\n        {\n            \"code\": 48,\n            \"name\": \"BANK MIZUHO INDONESIA\"\n        },\n        {\n            \"code\": 50,\n            \"name\": \"STANDARD CHARTERED BANK\"\n        },\n        {\n            \"code\": 52,\n            \"name\": \"BANK ABN AMRO\"\n        },\n        {\n            \"code\": 53,\n            \"name\": \"BANK KEPPEL TATLEE BUANA\"\n        },\n        {\n            \"code\": 54,\n            \"name\": \"BANK CAPITAL INDONESIA, TBK.\"\n        },\n        {\n            \"code\": 57,\n            \"name\": \"BANK BNP PARIBAS INDONESIA\"\n        },\n        {\n            \"code\": 58,\n            \"name\": \"BANK UOB INDONESIA\"\n        },\n        {\n            \"code\": 59,\n            \"name\": \"KOREA EXCHANGE BANK DANAMON\"\n        },\n        {\n            \"code\": 60,\n            \"name\": \"RABOBANK INTERNASIONAL INDONESIA\"\n        },\n        {\n            \"code\": 61,\n            \"name\": \"ANZ PANIN BANK\"\n        },\n        {\n            \"code\": 67,\n            \"name\": \"DEUTSCHE BANK AG.\"\n        },\n        {\n            \"code\": 68,\n            \"name\": \"BANK WOORI INDONESIA\"\n        },\n        {\n            \"code\": 69,\n            \"name\": \"BANK OF CHINA LIMITED\"\n        },\n        {\n            \"code\": 76,\n            \"name\": \"BANK BUMI ARTA\"\n        },\n        {\n            \"code\": 87,\n            \"name\": \"BANK EKONOMI\"\n        },\n        {\n            \"code\": 88,\n            \"name\": \"BANK ANTARDAERAH\"\n        },\n        {\n            \"code\": 89,\n            \"name\": \"BANK HAGA\"\n        },\n        {\n            \"code\": 93,\n            \"name\": \"BANK IFI\"\n        },\n        {\n            \"code\": 95,\n            \"name\": \"BANK CENTURY, TBK.\"\n        },\n        {\n            \"code\": 97,\n            \"name\": \"BANK MAYAPADA\"\n        },\n        {\n            \"code\": 110,\n            \"name\": \"BANK JABAR\"\n        },\n        {\n            \"code\": 111,\n            \"name\": \"BANK DKI\"\n        },\n        {\n            \"code\": 112,\n            \"name\": \"BPD DIY\"\n        },\n        {\n            \"code\": 113,\n            \"name\": \"BANK JATENG\"\n        },\n        {\n            \"code\": 114,\n            \"name\": \"BANK JATIM\"\n        },\n        {\n            \"code\": 115,\n            \"name\": \"BPD JAMBI\"\n        },\n        {\n            \"code\": 116,\n            \"name\": \"BPD ACEH\"\n        },\n        {\n            \"code\": 117,\n            \"name\": \"BANK SUMUT\"\n        },\n        {\n            \"code\": 118,\n            \"name\": \"BANK NAGARI\"\n        },\n        {\n            \"code\": 119,\n            \"name\": \"BANK RIAU\"\n        },\n        {\n            \"code\": 120,\n            \"name\": \"BANK SUMSEL\"\n        },\n        {\n            \"code\": 121,\n            \"name\": \"BANK LAMPUNG\"\n        },\n        {\n            \"code\": 122,\n            \"name\": \"BPD KALSEL\"\n        },\n        {\n            \"code\": 123,\n            \"name\": \"BPD KALIMANTAN BARAT\"\n        },\n        {\n            \"code\": 124,\n            \"name\": \"BPD KALTIM\"\n        },\n        {\n            \"code\": 125,\n            \"name\": \"BPD KALTENG\"\n        },\n        {\n            \"code\": 126,\n            \"name\": \"BPD SULSEL\"\n        },\n        {\n            \"code\": 127,\n            \"name\": \"BANK SULUT\"\n        },\n        {\n            \"code\": 128,\n            \"name\": \"BPD NTB\"\n        },\n        {\n            \"code\": 129,\n            \"name\": \"BPD BALI\"\n        },\n        {\n            \"code\": 130,\n            \"name\": \"BANK NTT\"\n        },\n        {\n            \"code\": 131,\n            \"name\": \"BANK MALUKU\"\n        },\n        {\n            \"code\": 132,\n            \"name\": \"BPD PAPUA\"\n        },\n        {\n            \"code\": 133,\n            \"name\": \"BANK BENGKULU\"\n        },\n        {\n            \"code\": 134,\n            \"name\": \"BPD SULAWESI TENGAH\"\n        },\n        {\n            \"code\": 135,\n            \"name\": \"BANK SULTRA\"\n        },\n        {\n            \"code\": 145,\n            \"name\": \"BANK NUSANTARA PARAHYANGAN\"\n        },\n        {\n            \"code\": 146,\n            \"name\": \"BANK SWADESI\"\n        },\n        {\n            \"code\": 147,\n            \"name\": \"BANK MUAMALAT\"\n        },\n        {\n            \"code\": 151,\n            \"name\": \"BANK MESTIKA\"\n        },\n        {\n            \"code\": 152,\n            \"name\": \"BANK METRO EXPRESS\"\n        },\n        {\n            \"code\": 153,\n            \"name\": \"BANK SHINTA INDONESIA\"\n        },\n        {\n            \"code\": 157,\n            \"name\": \"BANK MASPION\"\n        },\n        {\n            \"code\": 159,\n            \"name\": \"BANK HAGAKITA\"\n        },\n        {\n            \"code\": 161,\n            \"name\": \"BANK GANESHA\"\n        },\n        {\n            \"code\": 162,\n            \"name\": \"BANK WINDU KENTJANA\"\n        },\n        {\n            \"code\": 164,\n            \"name\": \"HALIM INDONESIA BANK\"\n        },\n        {\n            \"code\": 166,\n            \"name\": \"BANK HARMONI INTERNATIONAL\"\n        },\n        {\n            \"code\": 167,\n            \"name\": \"BANK KESAWAN\"\n        },\n        {\n            \"code\": 200,\n            \"name\": \"BANK TABUNGAN NEGARA (PERSERO)\"\n        },\n        {\n            \"code\": 212,\n            \"name\": \"BANK HIMPUNAN SAUDARA 1906, TBK .\"\n        },\n        {\n            \"code\": 213,\n            \"name\": \"BANK TABUNGAN PENSIUNAN NASIONAL\"\n        },\n        {\n            \"code\": 405,\n            \"name\": \"BANK SWAGUNA\"\n        },\n        {\n            \"code\": 422,\n            \"name\": \"BANK JASA ARTA\"\n        },\n        {\n            \"code\": 426,\n            \"name\": \"BANK MEGA\"\n        },\n        {\n            \"code\": 427,\n            \"name\": \"BANK JASA JAKARTA\"\n        },\n        {\n            \"code\": 441,\n            \"name\": \"BANK BUKOPIN\"\n        },\n        {\n            \"code\": 451,\n            \"name\": \"BANK SYARIAH MANDIRI\"\n        },\n        {\n            \"code\": 459,\n            \"name\": \"BANK BISNIS INTERNASIONAL\"\n        },\n        {\n            \"code\": 466,\n            \"name\": \"BANK SRI PARTHA\"\n        },\n        {\n            \"code\": 472,\n            \"name\": \"BANK JASA JAKARTA\"\n        },\n        {\n            \"code\": 484,\n            \"name\": \"BANK BINTANG MANUNGGAL\"\n        },\n        {\n            \"code\": 485,\n            \"name\": \"BANK BUMIPUTERA\"\n        },\n        {\n            \"code\": 490,\n            \"name\": \"BANK YUDHA BHAKTI\"\n        },\n        {\n            \"code\": 491,\n            \"name\": \"BANK MITRANIAGA\"\n        },\n        {\n            \"code\": 494,\n            \"name\": \"BANK AGRO NIAGA\"\n        },\n        {\n            \"code\": 498,\n            \"name\": \"BANK INDOMONEX\"\n        },\n        {\n            \"code\": 501,\n            \"name\": \"BANK ROYAL INDONESIA\"\n        },\n        {\n            \"code\": 503,\n            \"name\": \"BANK ALFINDO\"\n        },\n        {\n            \"code\": 506,\n            \"name\": \"BANK SYARIAH MEGA\"\n        },\n        {\n            \"code\": 513,\n            \"name\": \"BANK INA PERDANA\"\n        },\n        {\n            \"code\": 517,\n            \"name\": \"BANK HARFA\"\n        },\n        {\n            \"code\": 520,\n            \"name\": \"PRIMA MASTER BANK\"\n        },\n        {\n            \"code\": 521,\n            \"name\": \"BANK PERSYARIKATAN INDONESIA\"\n        },\n        {\n            \"code\": 525,\n            \"name\": \"BANK AKITA\"\n        },\n        {\n            \"code\": 526,\n            \"name\": \"LIMAN INTERNATIONAL BANK\"\n        },\n        {\n            \"code\": 531,\n            \"name\": \"ANGLOMAS INTERNASIONAL BANK\"\n        },\n        {\n            \"code\": 523,\n            \"name\": \"BANK DIPO INTERNATIONAL\"\n        },\n        {\n            \"code\": 535,\n            \"name\": \"BANK KESEJAHTERAAN EKONOMI\"\n        },\n        {\n            \"code\": 536,\n            \"name\": \"BANK UIB\"\n        },\n        {\n            \"code\": 542,\n            \"name\": \"BANK ARTOS IND\"\n        },\n        {\n            \"code\": 547,\n            \"name\": \"BANK PURBA DANARTA\"\n        },\n        {\n            \"code\": 548,\n            \"name\": \"BANK MULTI ARTA SENTOSA\"\n        },\n        {\n            \"code\": 553,\n            \"name\": \"BANK MAYORA\"\n        },\n        {\n            \"code\": 555,\n            \"name\": \"BANK INDEX SELINDO\"\n        },\n        {\n            \"code\": 566,\n            \"name\": \"BANK VICTORIA INTERNATIONAL\"\n        },\n        {\n            \"code\": 558,\n            \"name\": \"BANK EKSEKUTIF\"\n        },\n        {\n            \"code\": 559,\n            \"name\": \"CENTRATAMA NASIONAL BANK\"\n        },\n        {\n            \"code\": 562,\n            \"name\": \"BANK FAMA INTERNASIONAL\"\n        },\n        {\n            \"code\": 564,\n            \"name\": \"BANK SINAR HARAPAN BALI\"\n        },\n        {\n            \"code\": 567,\n            \"name\": \"BANK HARDA\"\n        },\n        {\n            \"code\": 945,\n            \"name\": \"BANK FINCONESIA\"\n        },\n        {\n            \"code\": 946,\n            \"name\": \"BANK MERINCORP\"\n        },\n        {\n            \"code\": 947,\n            \"name\": \"BANK MAYBANK INDOCORP\"\n        },\n        {\n            \"code\": 948,\n            \"name\": \"BANK OCBC – INDONESIA\"\n        },\n        {\n            \"code\": 949,\n            \"name\": \"BANK CHINA TRUST INDONESIA\"\n        },\n        {\n            \"code\": 950,\n            \"name\": \"BANK COMMONWEALTH\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "785957c7-1e97-41b9-8869-520bf634dfee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7866fc22-b7bc-40c8-8da2-08a382eefc59",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Virtual Account",
			"item": [
				{
					"name": "Get Virtual Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/virtual_accounts/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"virtual_accounts",
								""
							]
						},
						"description": "This is API for getting all wallet based on user id"
					},
					"response": [
						{
							"name": "GET WALLETS SUCCESS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/wallets/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"wallets",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "463"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 23:14:01 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1158946053,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1180129140,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1168122820,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1182986925,\n            \"balance\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Virtual Account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/virtual_accounts/:account_no",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"virtual_accounts",
								":account_no"
							],
							"variable": [
								{
									"key": "account_no",
									"value": "9889909872297637"
								}
							]
						},
						"description": "This is API for getting all wallet based on user id"
					},
					"response": [
						{
							"name": "GET WALLETS SUCCESS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/wallets/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"wallets",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "463"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 23:14:01 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1158946053,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1180129140,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1168122820,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1182986925,\n            \"balance\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Virtual Account Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/virtual_accounts/:account_no/logs/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"virtual_accounts",
								":account_no",
								"logs",
								""
							],
							"variable": [
								{
									"key": "account_no",
									"value": "9889909614610331"
								}
							]
						},
						"description": "This is API for getting all wallet based on user id"
					},
					"response": [
						{
							"name": "GET WALLETS SUCCESS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/wallets/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"wallets",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "463"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 23:14:01 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1158946053,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1180129140,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1168122820,\n            \"balance\": 0\n        },\n        {\n            \"status\": \"ACTIVE\",\n            \"id\": 1182986925,\n            \"balance\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Update Virtual Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88599102-6e94-476d-91a9-dc701fd4e044",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dfd49997-608d-405c-a314-4e2a6bbef8d7",
								"exec": [
									"var today = new Date();",
									"var year = today.getFullYear();",
									"var month = today.getMonth();",
									"var day = today.getDate();",
									"",
									"var new_date = new Date(year + 10, month, day);",
									"var new_date = new_date.toISOString().split('.').shift()",
									"postman.setEnvironmentVariable(\"today\", new_date)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Andry Ansyah",
									"description": "(Required) Must Be unique, Minimum 2 Character Maximal 70 Character, only alphabet allowed",
									"type": "text",
									"disabled": true
								},
								{
									"key": "datetime_expired",
									"value": "{{today}}",
									"description": "(Required) Must Be Valid Phone Extension",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/virtual_accounts/:account_no",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"virtual_accounts",
								":account_no"
							],
							"variable": [
								{
									"key": "account_no",
									"value": "8924667068793822"
								}
							]
						},
						"description": "Create user additionally with default Wallet and default Virtual Account"
					},
					"response": [
						{
							"name": "Create User Failed Admin Permission Required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\"     : \"jisoo\",\n\t\"name\"         : \"jisoo\",\n\t\"phone_ext\"    : \"62\",\n\t\"phone_number\" : \"81219642444\",\n\t\"email\"        : \"jisoo@blackpink.com\",\n\t\"password\"     : \"password\",\n\t\"pin\"          : \"123456\",\n\t\"role\"         : \"USER\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"users",
										""
									]
								}
							},
							"status": "FORBIDDEN",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Dec 2018 00:41:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Admin Permission Required\"\n}"
						},
						{
							"name": "Create User Failed Missing Fields",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text",
											"disabled": true
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "279"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:57:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"name\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    },\n    \"message\": \"Input payload validation failed\"\n}"
						},
						{
							"name": "Create User Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "133"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:56:52 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"user_id\": 9,\n        \"wallet_id\": \"1168122820\"\n    },\n    \"message\": \"User & Wallet Successfully Created\"\n}"
						},
						{
							"name": "Create User Duplicate Record",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "INTERNAL SERVER ERROR",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:57:17 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Duplicate Record\"\n}"
						}
					]
				},
				{
					"name": "Remove Virtual Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88599102-6e94-476d-91a9-dc701fd4e044",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dfd49997-608d-405c-a314-4e2a6bbef8d7",
								"exec": [
									"var today = new Date();",
									"var today = today.setUTCHours(0,0,0,0)",
									"var new_date = new Date(today)",
									"var new_date = new_date.toISOString().split('.').shift()",
									"postman.setEnvironmentVariable(\"today\", new_date)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Update Values",
									"description": "(Required) Must Be unique, Minimum 2 Character Maximal 70 Character, only alphabet allowed",
									"type": "text"
								},
								{
									"key": "datetime_expired",
									"value": "{{today}}",
									"description": "(Required) Must Be Valid Phone Extension",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/virtual_accounts/:account_no",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"virtual_accounts",
								":account_no"
							],
							"variable": [
								{
									"key": "account_no",
									"value": "9889909521767663"
								}
							]
						},
						"description": "Create user additionally with default Wallet and default Virtual Account"
					},
					"response": [
						{
							"name": "Create User Duplicate Record",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "INTERNAL SERVER ERROR",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:57:17 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Duplicate Record\"\n}"
						},
						{
							"name": "Create User Failed Admin Permission Required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\"     : \"jisoo\",\n\t\"name\"         : \"jisoo\",\n\t\"phone_ext\"    : \"62\",\n\t\"phone_number\" : \"81219642444\",\n\t\"email\"        : \"jisoo@blackpink.com\",\n\t\"password\"     : \"password\",\n\t\"pin\"          : \"123456\",\n\t\"role\"         : \"USER\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"users",
										""
									]
								}
							},
							"status": "FORBIDDEN",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Dec 2018 00:41:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": \"Admin Permission Required\"\n}"
						},
						{
							"name": "Create User Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "133"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:56:52 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"user_id\": 9,\n        \"wallet_id\": \"1168122820\"\n    },\n    \"message\": \"User & Wallet Successfully Created\"\n}"
						},
						{
							"name": "Create User Failed Missing Fields",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "jennie",
											"description": "(Required) The username for authentication to ModanaKu",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "jennie",
											"description": "(Required) The display name for ModanaKu",
											"type": "text",
											"disabled": true
										},
										{
											"key": "email",
											"value": "jennie@bp.com",
											"description": "(Required) The email for ModanaKu",
											"type": "text"
										},
										{
											"key": "phone_ext",
											"value": "62",
											"description": "(Required) The phone extension",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "8122364134",
											"description": "(Required) The user phone number for ModanaKu",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "(Required) The password for authentication to ModanaKu",
											"type": "text"
										},
										{
											"key": "pin",
											"value": "123456",
											"description": "(Required) The pin for authorize transaction on ModanaKu",
											"type": "text"
										},
										{
											"key": "role",
											"value": "USER",
											"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/v1/users/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "279"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.7.0"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Dec 2018 22:57:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"name\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    },\n    \"message\": \"Input payload validation failed\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Billing",
			"item": [
				{
					"name": "Plan",
					"item": [
						{
							"name": "Create Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create plan\");",
											"",
											"pm.test(\"should data contain plan_id\", () => {",
											"    pm.expect(response.data, [\"plan_id\"]); ",
											"    pm.environment.set(\"plan_id\",response.data.plan_id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-Api-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "payment_plan_id",
											"value": "{{payment_plan_id}}",
											"description": "(Required) Payment Plan ID",
											"type": "text"
										},
										{
											"key": "amount",
											"value": "1111",
											"description": "(Required) Amount",
											"type": "text"
										},
										{
											"key": "due_date",
											"value": "2019/12/12",
											"description": "(Required) yyyymmdd",
											"type": "text"
										},
										{
											"key": "type",
											"value": "MAIN",
											"description": "(Optional) MAIN | ADDITIONAL",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/plans/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"plans",
										""
									]
								},
								"description": "API Endpoint for creating payment plan"
							},
							"response": []
						},
						{
							"name": "Get Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create User\");",
											"",
											"pm.test(\"should data contain user_id and wallet_id\", () => {",
											"    pm.expect(response.data, [\"user_id\",\"wallet_id\"]); ",
											"    pm.environment.set(\"user_id\",response.data.user_id);",
											"    pm.environment.set(\"wallet_id\",response.data.wallet_id);",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-Api-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/plans/:plan_id",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"plans",
										":plan_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": "{{plan_id}}",
											"type": "string"
										}
									]
								},
								"description": "Create user additionally with default Wallet and default Virtual Account"
							},
							"response": [
								{
									"name": "Create User Failed Admin Permission Required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\"     : \"jisoo\",\n\t\"name\"         : \"jisoo\",\n\t\"phone_ext\"    : \"62\",\n\t\"phone_number\" : \"81219642444\",\n\t\"email\"        : \"jisoo@blackpink.com\",\n\t\"password\"     : \"password\",\n\t\"pin\"          : \"123456\",\n\t\"role\"         : \"USER\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"users",
												""
											]
										}
									},
									"status": "FORBIDDEN",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Fri, 21 Dec 2018 00:41:20 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"Admin Permission Required\"\n}"
								},
								{
									"name": "Create User Duplicate Record",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text"
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "INTERNAL SERVER ERROR",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "37"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:57:17 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"Duplicate Record\"\n}"
								},
								{
									"name": "Create User Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text"
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:56:52 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"user_id\": 9,\n        \"wallet_id\": \"1168122820\"\n    },\n    \"message\": \"User & Wallet Successfully Created\"\n}"
								},
								{
									"name": "Create User Failed Missing Fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text",
													"disabled": true
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text",
													"disabled": true
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "BAD REQUEST",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "279"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:57:04 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"name\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    },\n    \"message\": \"Input payload validation failed\"\n}"
								}
							]
						},
						{
							"name": "Get Plans",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create User\");",
											"",
											"pm.test(\"should data contain user_id and wallet_id\", () => {",
											"    pm.expect(response.data, [\"user_id\",\"wallet_id\"]); ",
											"    pm.environment.set(\"user_id\",response.data.user_id);",
											"    pm.environment.set(\"wallet_id\",response.data.wallet_id);",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/plans/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"plans",
										""
									]
								},
								"description": "Create user additionally with default Wallet and default Virtual Account"
							},
							"response": [
								{
									"name": "Create User Failed Admin Permission Required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\"     : \"jisoo\",\n\t\"name\"         : \"jisoo\",\n\t\"phone_ext\"    : \"62\",\n\t\"phone_number\" : \"81219642444\",\n\t\"email\"        : \"jisoo@blackpink.com\",\n\t\"password\"     : \"password\",\n\t\"pin\"          : \"123456\",\n\t\"role\"         : \"USER\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"users",
												""
											]
										}
									},
									"status": "FORBIDDEN",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Fri, 21 Dec 2018 00:41:20 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"Admin Permission Required\"\n}"
								},
								{
									"name": "Create User Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text"
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:56:52 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"user_id\": 9,\n        \"wallet_id\": \"1168122820\"\n    },\n    \"message\": \"User & Wallet Successfully Created\"\n}"
								},
								{
									"name": "Create User Duplicate Record",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text"
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "INTERNAL SERVER ERROR",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "37"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:57:17 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"Duplicate Record\"\n}"
								},
								{
									"name": "Create User Failed Missing Fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text",
													"disabled": true
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text",
													"disabled": true
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "BAD REQUEST",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "279"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:57:04 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"name\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    },\n    \"message\": \"Input payload validation failed\"\n}"
								}
							]
						},
						{
							"name": "Update Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "PAID",
											"description": "(Required) Plan Status (PENDING|SENDING|RETRYING|FAIL|PAID)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/plans/:plan_id",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"plans",
										":plan_id"
									],
									"variable": [
										{
											"id": "6c8ec1ef-475a-40c0-aba2-e35b5aa80dc2",
											"key": "plan_id",
											"value": "{{plan_id}}",
											"type": "string"
										}
									]
								},
								"description": "Create user additionally with default Wallet and default Virtual Account"
							},
							"response": [
								{
									"name": "Create User Failed Missing Fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text",
													"disabled": true
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text",
													"disabled": true
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "BAD REQUEST",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "279"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:57:04 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"name\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    },\n    \"message\": \"Input payload validation failed\"\n}"
								},
								{
									"name": "Create User Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text"
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:56:52 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"user_id\": 9,\n        \"wallet_id\": \"1168122820\"\n    },\n    \"message\": \"User & Wallet Successfully Created\"\n}"
								},
								{
									"name": "Create User Duplicate Record",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text"
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "INTERNAL SERVER ERROR",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "37"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:57:17 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"Duplicate Record\"\n}"
								},
								{
									"name": "Create User Failed Admin Permission Required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\"     : \"jisoo\",\n\t\"name\"         : \"jisoo\",\n\t\"phone_ext\"    : \"62\",\n\t\"phone_number\" : \"81219642444\",\n\t\"email\"        : \"jisoo@blackpink.com\",\n\t\"password\"     : \"password\",\n\t\"pin\"          : \"123456\",\n\t\"role\"         : \"USER\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"users",
												""
											]
										}
									},
									"status": "FORBIDDEN",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Fri, 21 Dec 2018 00:41:20 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"Admin Permission Required\"\n}"
								}
							]
						},
						{
							"name": "Remove Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/plans/:plan_id",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"plans",
										":plan_id"
									],
									"variable": [
										{
											"id": "3ba85375-710d-48da-98b9-17e075ef8a19",
											"key": "plan_id",
											"value": "227d2e9d-2aff-4a51-a7a2-83b3da92ad6f",
											"type": "string"
										}
									]
								},
								"description": "Create user additionally with default Wallet and default Virtual Account"
							},
							"response": [
								{
									"name": "Create User Failed Missing Fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text",
													"disabled": true
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text",
													"disabled": true
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "BAD REQUEST",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "279"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:57:04 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": {\n        \"username\": \"Missing required parameter in the JSON body or the post body or the query string\",\n        \"name\": \"Missing required parameter in the JSON body or the post body or the query string\"\n    },\n    \"message\": \"Input payload validation failed\"\n}"
								},
								{
									"name": "Create User Failed Admin Permission Required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\"     : \"jisoo\",\n\t\"name\"         : \"jisoo\",\n\t\"phone_ext\"    : \"62\",\n\t\"phone_number\" : \"81219642444\",\n\t\"email\"        : \"jisoo@blackpink.com\",\n\t\"password\"     : \"password\",\n\t\"pin\"          : \"123456\",\n\t\"role\"         : \"USER\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"users",
												""
											]
										}
									},
									"status": "FORBIDDEN",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Fri, 21 Dec 2018 00:41:20 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"Admin Permission Required\"\n}"
								},
								{
									"name": "Create User Duplicate Record",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text"
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "INTERNAL SERVER ERROR",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "37"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:57:17 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": \"Duplicate Record\"\n}"
								},
								{
									"name": "Create User Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jennie",
													"description": "(Required) The username for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "name",
													"value": "jennie",
													"description": "(Required) The display name for ModanaKu",
													"type": "text"
												},
												{
													"key": "email",
													"value": "jennie@bp.com",
													"description": "(Required) The email for ModanaKu",
													"type": "text"
												},
												{
													"key": "phone_ext",
													"value": "62",
													"description": "(Required) The phone extension",
													"type": "text"
												},
												{
													"key": "phone_number",
													"value": "8122364134",
													"description": "(Required) The user phone number for ModanaKu",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"description": "(Required) The password for authentication to ModanaKu",
													"type": "text"
												},
												{
													"key": "pin",
													"value": "123456",
													"description": "(Required) The pin for authorize transaction on ModanaKu",
													"type": "text"
												},
												{
													"key": "role",
													"value": "USER",
													"description": "(Required) The user permissionin ModanaKu\nUSER | ADMIN",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}:{{port}}/api/v1/users/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"v1",
												"users",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "133"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.0"
										},
										{
											"key": "Date",
											"value": "Thu, 06 Dec 2018 22:56:52 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"user_id\": 9,\n        \"wallet_id\": \"1168122820\"\n    },\n    \"message\": \"User & Wallet Successfully Created\"\n}"
								}
							]
						}
					],
					"description": "Product API representations of products you sell it may be physical goods, to be shipped, or digital.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Payment Plan",
					"item": [
						{
							"name": "Update Payment Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create Payment plan\");",
											"",
											"pm.test(\"should data contain payment_plan_id\", () => {",
											"    pm.expect(response.data, [\"payment_plan_id\"]); ",
											"    pm.environment.set(\"payment_plan_id\",response.data.payment_plan_id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"wallet_id\" : \"{{wallet_id}}\",\n\t\"destination\" : \"123456\",\n\t\"status\" : \"DEACTIVE\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"payment_plans",
										""
									]
								},
								"description": "API Endpoint for creating payment plan"
							},
							"response": []
						},
						{
							"name": "Create Payment Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create Payment plan\");",
											"",
											"pm.test(\"should data contain payment_plan_id\", () => {",
											"    pm.expect(response.data, [\"payment_plan_id\"]); ",
											"    pm.environment.set(\"payment_plan_id\",response.data.payment_plan_id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "60cba85e-de24-4c2b-b4f7-4059e4dfe3f1",
										"exec": [
											"var today = new Date();",
											"var today = today.setUTCHours(0,0,0,0)",
											"var new_date = new Date(today)",
											"var new_date = new_date.toISOString().split('.').shift()",
											"postman.setEnvironmentVariable(\"today\", new_date)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Api-Key",
										"type": "text",
										"value": "{{api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"wallet_id\" : \"{{wallet_id}}\",\n\t\"destination\" : \"9889909819050602\",\n\t\"method\" : \"AUTO\",\n\t\"plans\" : [\n\t\t{\n\t\t\t\"amount\" : \"500000\",\n\t\t\t\"due_date\" : \"{{today}}\",\n\t\t\t\"type\" : \"MAIN\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"payment_plans",
										""
									]
								},
								"description": "payroll_date == due_date\nwithout late fee"
							},
							"response": []
						},
						{
							"name": "Get Payment Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create User\");",
											"",
											"pm.test(\"should data contain user_id and wallet_id\", () => {",
											"    pm.expect(response.data, [\"user_id\",\"wallet_id\"]); ",
											"    pm.environment.set(\"user_id\",response.data.user_id);",
											"    pm.environment.set(\"wallet_id\",response.data.wallet_id);",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-Api-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/:payment_plan_id",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"payment_plans",
										":payment_plan_id"
									],
									"variable": [
										{
											"key": "payment_plan_id",
											"value": "{{payment_plan_id}}",
											"type": "string"
										}
									]
								},
								"description": "API Endpoint for get payment plan"
							},
							"response": [
								{
									"name": "Get Payment Plan",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}",
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/:payment_plan_id",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"payment_plans",
												":payment_plan_id"
											],
											"variable": [
												{
													"key": "payment_plan_id",
													"value": "{{payment_plan_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "592"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.2"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2019 04:55:14 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"plans\": [\n            {\n                \"type\": \"MAIN\",\n                \"status\": \"PENDING\",\n                \"id\": \"227d2e9d-2aff-4a51-a7a2-83b3da92ad6f\",\n                \"due_date\": \"2019-04-28 00:00:00\",\n                \"created_at\": \"2019-04-10T04:34:24.995903+00:00\",\n                \"amount\": 1000\n            },\n            {\n                \"type\": \"MAIN\",\n                \"status\": \"PENDING\",\n                \"id\": \"dab147e8-1417-4eb2-94d5-85e5d57f1c63\",\n                \"due_date\": \"2019-05-28 00:00:00\",\n                \"created_at\": \"2019-04-10T04:34:24.996612+00:00\",\n                \"amount\": 1000\n            }\n        ],\n        \"destination\": \"123456\",\n        \"status\": \"ACTIVE\",\n        \"id\": \"302e4dbd-396f-42c3-b1b6-8cf9d4b6af4d\",\n        \"wallet_id\": \"a589c067-625b-455f-abe9-d1d319acadc3\",\n        \"created_at\": \"2019-04-10T04:34:24.994857+00:00\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Payment Plans",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create User\");",
											"",
											"pm.test(\"should data contain user_id and wallet_id\", () => {",
											"    pm.expect(response.data, [\"user_id\",\"wallet_id\"]); ",
											"    pm.environment.set(\"user_id\",response.data.user_id);",
											"    pm.environment.set(\"wallet_id\",response.data.wallet_id);",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-Api-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"payment_plans",
										""
									]
								},
								"description": "API Endpoint for getting all payment plan"
							},
							"response": [
								{
									"name": "Get Payment Plans",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}",
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/",
											"host": [
												"{{base_url}}"
											],
											"port": "{{port}}",
											"path": [
												"api",
												"{{version}}",
												"payment_plans",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1177"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.14.1 Python/3.7.2"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2019 04:54:10 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"plans\": [\n                {\n                    \"type\": \"MAIN\",\n                    \"status\": \"PENDING\",\n                    \"id\": \"c3e144bb-8819-45ba-8bfa-e3e22481e1bd\",\n                    \"due_date\": \"2019-04-28 00:00:00\",\n                    \"created_at\": \"2019-04-10T04:33:07.819242+00:00\",\n                    \"amount\": 1000\n                },\n                {\n                    \"type\": \"MAIN\",\n                    \"status\": \"PENDING\",\n                    \"id\": \"7898c147-6a65-4bcc-a381-8ce9852045f5\",\n                    \"due_date\": \"2019-05-28 00:00:00\",\n                    \"created_at\": \"2019-04-10T04:33:07.820950+00:00\",\n                    \"amount\": 1000\n                }\n            ],\n            \"destination\": \"123456\",\n            \"status\": \"ACTIVE\",\n            \"id\": \"d688d302-0352-4bea-b07c-0e696df39487\",\n            \"wallet_id\": \"a589c067-625b-455f-abe9-d1d319acadc3\",\n            \"created_at\": \"2019-04-10T04:33:07.815246+00:00\"\n        },\n        {\n            \"plans\": [\n                {\n                    \"type\": \"MAIN\",\n                    \"status\": \"PENDING\",\n                    \"id\": \"227d2e9d-2aff-4a51-a7a2-83b3da92ad6f\",\n                    \"due_date\": \"2019-04-28 00:00:00\",\n                    \"created_at\": \"2019-04-10T04:34:24.995903+00:00\",\n                    \"amount\": 1000\n                },\n                {\n                    \"type\": \"MAIN\",\n                    \"status\": \"PENDING\",\n                    \"id\": \"dab147e8-1417-4eb2-94d5-85e5d57f1c63\",\n                    \"due_date\": \"2019-05-28 00:00:00\",\n                    \"created_at\": \"2019-04-10T04:34:24.996612+00:00\",\n                    \"amount\": 1000\n                }\n            ],\n            \"destination\": \"123456\",\n            \"status\": \"ACTIVE\",\n            \"id\": \"302e4dbd-396f-42c3-b1b6-8cf9d4b6af4d\",\n            \"wallet_id\": \"a589c067-625b-455f-abe9-d1d319acadc3\",\n            \"created_at\": \"2019-04-10T04:34:24.994857+00:00\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Remove Payment Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/:plan_id",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"payment_plans",
										":plan_id"
									],
									"variable": [
										{
											"id": "3620cb5d-c83e-449c-a652-a805bb09c968",
											"key": "plan_id",
											"value": "1234567A",
											"type": "string"
										}
									]
								},
								"description": "API Endpoint for Removing payment plan"
							},
							"response": []
						}
					],
					"description": "Product API representations of products you sell it may be physical goods, to be shipped, or digital.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case",
					"item": [
						{
							"name": "Payment Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create Payment plan\");",
											"",
											"pm.test(\"should data contain payment_plan_id\", () => {",
											"    pm.expect(response.data, [\"payment_plan_id\"]); ",
											"    pm.environment.set(\"payment_plan_id\",response.data.payment_plan_id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "60cba85e-de24-4c2b-b4f7-4059e4dfe3f1",
										"exec": [
											"var interval = 24",
											"var delay = 2",
											"",
											"var dt = new Date();",
											"// set the due date to next 2 minutes",
											"var add_minutes = dt.setMinutes( dt.getMinutes() + delay )",
											"var add_minutes = dt.setSeconds( 0.0 )",
											"var mainFeeDueDate = new Date(add_minutes).toISOString().split('.').shift();",
											"console.log(mainFeeDueDate)",
											"postman.setEnvironmentVariable(\"mainFeeDueDate\", mainFeeDueDate)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Api-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"wallet_id\" : \"{{wallet_id}}\",\n\t\"destination\" : \"8364008127511590\",\n\t\"method\" : \"AUTO_PAY\",\n\t\"plans\" : [\n\t\t{\n\t\t\t\"amount\" : \"1000000\",\n\t\t\t\"due_date\" : \"{{mainFeeDueDate}}\",\n\t\t\t\"type\" : \"MAIN\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"payment_plans",
										""
									]
								},
								"description": "payroll_date == due_date\nwithout late fee"
							},
							"response": []
						},
						{
							"name": "Payment Plan + Late Fee",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create Payment plan\");",
											"",
											"pm.test(\"should data contain payment_plan_id\", () => {",
											"    pm.expect(response.data, [\"payment_plan_id\"]); ",
											"    pm.environment.set(\"payment_plan_id\",response.data.payment_plan_id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "60cba85e-de24-4c2b-b4f7-4059e4dfe3f1",
										"exec": [
											"var interval = 24",
											"var delay = 2",
											"",
											"var dt = new Date();",
											"// set the due date to next 2 minutes",
											"var add_minutes = dt.setMinutes( dt.getMinutes() + delay )",
											"var add_minutes = dt.setSeconds( 0.0 )",
											"var mainFeeDueDate = new Date(add_minutes).toISOString().split('.').shift();",
											"console.log(mainFeeDueDate)",
											"postman.setEnvironmentVariable(\"mainFeeDueDate\", mainFeeDueDate)",
											"",
											"// set the due date to next 24 minutes + delay",
											"var add_minutes = dt.setMinutes( dt.getMinutes() + interval * 1 + delay)",
											"var add_minutes = dt.setSeconds( 0.0 )",
											"var lateFeeDueDate = new Date(add_minutes).toISOString().split('.').shift();",
											"console.log(lateFeeDueDate)",
											"postman.setEnvironmentVariable(\"lateFeeDueDate\", lateFeeDueDate)",
											"",
											"// set the due date to next 24 minutes + delay",
											"var add_minutes = dt.setMinutes( dt.getMinutes() + interval * 2 + delay)",
											"var add_minutes = dt.setMilliseconds( 0.0 )",
											"var lateFeeDueDate2 = new Date(add_minutes).toISOString().split('.').shift();",
											"console.log(lateFeeDueDate2)",
											"postman.setEnvironmentVariable(\"lateFeeDueDate2\", lateFeeDueDate2)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{unit_test_access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"wallet_id\" : \"{{unit_test_wallet_id}}\",\n\t\"destination\" : \"9999888877776666\",\n\t\"plans\" : [\n\t\t{\n\t\t\t\"amount\" : \"100000\",\n\t\t\t\"due_date\" : \"{{mainFeeDueDate}}\",\n\t\t\t\"type\" : \"MAIN\"\n\t\t},\n\t\t{\n\t\t\t\"amount\" : \"10000\",\n\t\t\t\"due_date\" : \"{{lateFeeDueDate}}\",\n\t\t\t\"type\" : \"ADDITIONAL\"\n\t\t},\n\t\t{\n\t\t\t\"amount\" : \"10000\",\n\t\t\t\"due_date\" : \"{{lateFeeDueDate2}}\",\n\t\t\t\"type\" : \"ADDITIONAL\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"payment_plans",
										""
									]
								},
								"description": "payroll_date == due_date\nwith late fee"
							},
							"response": []
						},
						{
							"name": "Payment Plan (Early Payroll)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88599102-6e94-476d-91a9-dc701fd4e044",
										"exec": [
											"response = pm.response.json()",
											"console.log(\"Create Payment plan\");",
											"",
											"pm.test(\"should data contain payment_plan_id\", () => {",
											"    pm.expect(response.data, [\"payment_plan_id\"]); ",
											"    pm.environment.set(\"payment_plan_id\",response.data.payment_plan_id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "60cba85e-de24-4c2b-b4f7-4059e4dfe3f1",
										"exec": [
											"var interval = 24",
											"var delay = 3",
											"",
											"var dt = new Date();",
											"// set the due date to next 2 minutes",
											"var add_minutes = dt.setMinutes( dt.getMinutes() + delay )",
											"var add_minutes = dt.setSeconds( 0.0 )",
											"var mainFeeDueDate = new Date(add_minutes).toISOString().split('.').shift();",
											"console.log(mainFeeDueDate)",
											"postman.setEnvironmentVariable(\"mainFeeDueDate\", mainFeeDueDate)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{unit_test_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"wallet_id\" : \"{{unit_test_wallet_id}}\",\n\t\"destination\" : \"9999888877776666\",\n\t\"plans\" : [\n\t\t{\n\t\t\t\"amount\" : \"100000\",\n\t\t\t\"due_date\" : \"{{mainFeeDueDate}}\",\n\t\t\t\"type\" : \"MAIN\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{port}}/api/{{version}}/payment_plans/",
									"host": [
										"{{base_url}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"payment_plans",
										""
									]
								},
								"description": "payroll_date == due_date\nwithout late fee"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Callback",
			"item": [
				{
					"name": "Deposit Callback",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84de859a-a7c4-421a-b317-03512f2d5e55",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8db210c7-98b7-4bef-a9c0-6f8563323efc",
								"exec": [
									"let BniEnc = eval(globals.loadBNIUtility);",
									"",
									"let creditClientId = pm.environment.get(\"BNI_CREDIT_CLIENT_ID\");",
									"let creditClientSecretKey = pm.environment.get(\"BNI_CREDIT_CLIENT_SECRET_KEY\");",
									"",
									"let payload = {",
									"    virtual_account : pm.environment.get(\"va_credit_no\"),",
									"    customer_name   : pm.environment.get(\"va_name\"),",
									"    trx_id : pm.environment.get(\"va_credit_trx_id\"),",
									"    trx_amount : 0,",
									"    payment_amount : 10000000,",
									"    cumulative_payment_amount : 10000000,",
									"    payment_ntb : Math.floor((Math.random() * 99999) + 10000).toString(),",
									"    datetime_payment : \"2018-12-20 11:16:00\",",
									"}",
									"",
									"let encrypted_payload = BniEnc.encrypt(payload, creditClientId, creditClientSecretKey);",
									"console.log(encrypted_payload);",
									"",
									"pm.environment.set(\"encrypted_payload\", encrypted_payload);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{BNI_CREDIT_CLIENT_ID}}\",\n    \"data\": \"{{encrypted_payload}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/callback/bni/va/deposit",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"callback",
								"bni",
								"va",
								"deposit"
							]
						},
						"description": "Endpoint for Trigger Deposit"
					},
					"response": []
				},
				{
					"name": "Withdraw Callback",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84de859a-a7c4-421a-b317-03512f2d5e55",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8db210c7-98b7-4bef-a9c0-6f8563323efc",
								"exec": [
									"let BniEnc = eval(globals.loadBNIUtility);",
									"",
									"let debitClientID = pm.environment.get(\"BNI_DEBIT_CLIENT_ID\");",
									"let debitClientSecretKey = pm.environment.get(\"BNI_DEBIT_SECRET_KEY\");",
									"",
									"let payload = {",
									"    virtual_account : pm.environment.get(\"va_debit_no\"),",
									"    customer_name   : pm.environment.get(\"va_name\"),",
									"    trx_id : pm.environment.get(\"va_debit_trx_id\"),",
									"    trx_amount : 0,",
									"    payment_amount : -50000,",
									"    cumulative_payment_amount : -50000,",
									"    payment_ntb : Math.floor((Math.random() * 99999) + 10000).toString(),",
									"    datetime_payment : \"2018-12-20 11:16:00\",",
									"}",
									"",
									"let encrypted_payload = BniEnc.encrypt(payload, debitClientID, debitClientSecretKey);",
									"console.log(encrypted_payload);",
									"",
									"pm.environment.set(\"encrypted_payload\", encrypted_payload);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{BNI_CREDIT_CLIENT_ID}}\",\n    \"data\": \"{{encrypted_payload}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/callback/bni/va/withdraw",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"callback",
								"bni",
								"va",
								"withdraw"
							]
						},
						"description": "Endpoint for Trigger Deposit"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "13ede85e-d2a3-4744-870a-fc4c16454df6",
						"type": "text/javascript",
						"exec": [
							"postman.setGlobalVariable(\"loadBNIUtility\", function loadBNIUtility() {",
							"    let utility = {};",
							"    ",
							"    function TIME_DIFF_LIMIT() { return 300; }",
							"    ",
							"    function tsDiff(ts) { return Math.abs(ts - Math.round(+new Date() / 1e3)) <= TIME_DIFF_LIMIT(); }",
							"    ",
							"    function str_pad(str, length, pad_char, pad_left) {",
							"    \twhile (str.length < length) {",
							"    \t\tstr = pad_left ? pad_char + str : str + pad_char;",
							"    \t}",
							"    \treturn str;",
							"    }",
							"    ",
							"    function dec(str, sck) {",
							"    \tlet res = '';",
							"    \tlet strls = str.length;",
							"    \tlet strlk = sck.length;",
							"    \tfor (let i = 0; i < strls; i++) {",
							"    \t\tlet chr = str.substr(i, 1);",
							"    \t\tlet keychar = sck.substr((i % strlk) - 1, 1);",
							"    \t\tchr = String.fromCharCode(((chr.charCodeAt() - keychar.charCodeAt()) + 256) % 128);",
							"    \t\tres += chr;",
							"    \t}",
							"    \treturn res;",
							"    }",
							"",
							"    function enc(str, sck) {",
							"    \tlet res = '';",
							"    \tlet strls = str.length;",
							"    \tlet strlk = sck.length;",
							"    \tfor (let i = 0; i < strls; i++) {",
							"    \t\tlet chr = str.substr(i, 1);",
							"    \t\tlet keychar = sck.substr((i % strlk) - 1, 1);",
							"    \t\tchr = String.fromCharCode((chr.charCodeAt() + keychar.charCodeAt()) % 128);",
							"    \t\tres += chr;",
							"    \t}",
							"    \treturn res;",
							"    }",
							"    ",
							"    function doubleDecrypt(str, cid, sck) {",
							"    \tlet res = Buffer.from(str_pad(str, Math.ceil(str.length / 4) * 4, '=', 0).replace(/-/g, '+').replace(/_/g, '/'), 'base64').toString('utf8');",
							"    \tres = dec(res, cid);",
							"    \tres = dec(res, sck);",
							"    \treturn res;",
							"    }",
							"    ",
							"    function doubleEncrypt(str, cid, sck) {",
							"    \tlet res = '';",
							"    \tres = enc(str, cid);",
							"    \tres = enc(res, sck);",
							"    \treturn Buffer.from(res, 'utf8').toString('base64').replace(/=+$/, '').replace(/\\+/g, '-').replace(/\\//g, '_');",
							"    }",
							"",
							"    ",
							"",
							"",
							"    ",
							"    utility.encrypt = function encrypt(json_data, cid, sck) {",
							"    \treturn doubleEncrypt(('' + Math.round(+new Date() / 1e3)).split('').reverse().join('') + '.' + JSON.stringify(json_data), cid, sck);",
							"    }",
							"    ",
							"    utility.decrypt = function decrypt(hashed_string, cid, sck) {",
							"    \tlet parsed_string = doubleDecrypt(hashed_string, cid, sck);",
							"    \tlet dot_pos = parsed_string.indexOf('.');",
							"    \tif (dot_pos < 1)",
							"    \t\treturn null;",
							"    \tlet ts = parsed_string.substr(0, dot_pos);",
							"    \tlet data = parsed_string.substr(dot_pos + 1);",
							"    \tif (tsDiff(ts.split('').reverse().join('')) === true) {",
							"    \t\treturn JSON.parse(data);",
							"    \t}",
							"    \treturn null;",
							"    }",
							"    return utility;",
							"} + '; loadBNIUtility();');"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5ffd7a89-bc0d-4225-99f7-c7f8d2ea872d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Scheduler Copy",
			"item": [
				{
					"name": "Get Schedulers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/schedulers/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"schedulers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Schedule",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/schedulers/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"schedulers",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Utility",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/utility/health",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"utility",
								"health"
							]
						}
					},
					"response": []
				}
			],
			"description": "Various API Call for Utility Purpose"
		},
		{
			"name": "Get Logs",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}:{{port}}/api/{{version}}/logs/",
					"host": [
						"{{base_url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"{{version}}",
						"logs",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get Logs Success Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/{{version}}/logs/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"logs",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "27119"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.14.1 Python/3.7.2"
						},
						{
							"key": "Date",
							"value": "Fri, 11 Jan 2019 03:05:09 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'type': 'createbilling', 'client_id': '99098', 'trx_id': 175229999, 'trx_amount': '0', 'billing_type': 'o', 'customer_name': 'jennie', 'customer_email': '', 'customer_phone': '081219643444', 'virtual_account': '9889909890391391', 'datetime_expired': '2019-07-11 13:04:22', 'description': ''}\",\n            \"response_time\": 0.497860908508301,\n            \"response\": \"{'trx_id': 175229999, 'virtual_account': '9889909890391391'}\",\n            \"id\": 1,\n            \"api_name\": \"CREATE_CREDIT_VA\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-ECOLLECTION\"\n        },\n        {\n            \"api_type\": \"INCOMING\",\n            \"request\": \"{'virtual_account': 9889909890391391, 'customer_name': 'jennie', 'trx_id': 175229999, 'trx_amount': 0.0, 'payment_amount': 100000, 'cumulative_payment_amount': 100000, 'payment_ntb': 2836, 'datetime_payment': '2019-01-11 07:04:43', 'payment_channel_key': 'BNI_VA'}\",\n            \"response_time\": 0,\n            \"response\": \"{'status': 'SUCCESS', 'data': 'Successfully Deposit 100000.0 to 1163286265'}\",\n            \"id\": 2,\n            \"api_name\": \"DEPOSIT_NOTIFICATION\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-ECOLLECTION\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.167662143707275,\n            \"response\": \"{'access_token': 'man37Jhuj8Z5mYiHUR1xBjHDIxrYI2OWWXOOjkVa68IvkncPsKurr0', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 3,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"customerReferenceNumber\\\": \\\"2019011100053023642\\\", \\\"accountNum\\\": \\\"0115476117\\\", \\\"destinationBankCode\\\": \\\"014\\\", \\\"destinationAccountNum\\\": \\\"3333333333\\\", \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjdXN0b21lclJlZmVyZW5jZU51bWJlciI6IjIwMTkwMTExMDAwNTMwMjM2NDIiLCJhY2NvdW50TnVtIjoiMDExNTQ3NjExNyIsImRlc3RpbmF0aW9uQmFua0NvZGUiOiIwMTQiLCJkZXN0aW5hdGlvbkFjY291bnROdW0iOiIzMzMzMzMzMzMzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.DYz9J7elcOe2c60Bm_UpyXGebBMgh-JajiRjG49g5hg\\\"}\",\n            \"response_time\": 0.255583763122559,\n            \"response\": \"{'getInterbankInquiryResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0007', 'responseMessage': 'Request has been processed unsuccessfully', 'errorMessage': 'Unregistered Account', 'responseTimestamp': '2019-01-11T07:05:17.795Z'}}}\",\n            \"id\": 4,\n            \"api_name\": \"GET_INTERBANK_INQUIRY\",\n            \"status\": \"FAILED\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.0943288803100586,\n            \"response\": \"{'access_token': '8xGXvJwv14AKIrL92xZfEn2OW61I7PH29j0fKvv9EWOCoSR2tWYaUY', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 5,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"accountNo\\\": 115476151, \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50Tm8iOjExNTQ3NjE1MSwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.R4Znum2GCCG_PUfDPZpb4Mre3fMGnsQX8VcphwkPM7A\\\"}\",\n            \"response_time\": 0.29463791847229,\n            \"response\": \"{'getBalanceResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0007', 'responseMessage': 'Request has been processed unsuccessfully', 'errorMessage': 'Unregistered Account', 'responseTimestamp': '2019-01-11T07:50:33.033Z', 'accountNo': '115476151'}}}\",\n            \"id\": 6,\n            \"api_name\": \"GET_BALANCE\",\n            \"status\": \"FAILED\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.165585041046143,\n            \"response\": \"{'access_token': 'Ey0uksK1QDalmso6ZUB2x3P0SWzcSlBKzTJoTUiMfme8wL6Vb9cY6L', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 7,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"accountNo\\\": 115476151, \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50Tm8iOjExNTQ3NjE1MSwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.R4Znum2GCCG_PUfDPZpb4Mre3fMGnsQX8VcphwkPM7A\\\"}\",\n            \"response_time\": 0.0736777782440186,\n            \"response\": \"{'getBalanceResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0007', 'responseMessage': 'Request has been processed unsuccessfully', 'errorMessage': 'Unregistered Account', 'responseTimestamp': '2019-01-11T07:50:39.388Z', 'accountNo': '115476151'}}}\",\n            \"id\": 8,\n            \"api_name\": \"GET_BALANCE\",\n            \"status\": \"FAILED\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.264265298843384,\n            \"response\": \"{'access_token': '57pKYjLKJwbfrB1xX9MkehLv8Ob6XDFHyAYvvyFwu13svj7xyFFQlE', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 9,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"accountNo\\\": 115476151, \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50Tm8iOjExNTQ3NjE1MSwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.R4Znum2GCCG_PUfDPZpb4Mre3fMGnsQX8VcphwkPM7A\\\"}\",\n            \"response_time\": 0.128085851669312,\n            \"response\": \"{'getBalanceResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0155', 'responseMessage': 'CUSM DBER', 'errorMessage': 'CUSM DBER', 'responseTimestamp': '2019-01-11T09:32:55.660Z', 'accountNo': '115476151'}}}\",\n            \"id\": 10,\n            \"api_name\": \"GET_BALANCE\",\n            \"status\": \"FAILED\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.214174032211304,\n            \"response\": \"{'access_token': 'MJ1SJAyFdeyLfLQH5BbnN7I5s5HViPTmDMzyixZecDY2FR6xFiB2vW', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 11,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"accountNo\\\": 115476151, \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50Tm8iOjExNTQ3NjE1MSwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.R4Znum2GCCG_PUfDPZpb4Mre3fMGnsQX8VcphwkPM7A\\\"}\",\n            \"response_time\": 0.152369499206543,\n            \"response\": \"{'getBalanceResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0155', 'responseMessage': 'CUSM DBER', 'errorMessage': 'CUSM DBER', 'responseTimestamp': '2019-01-11T09:33:20.135Z', 'accountNo': '115476151'}}}\",\n            \"id\": 12,\n            \"api_name\": \"GET_BALANCE\",\n            \"status\": \"FAILED\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.210140943527222,\n            \"response\": \"{'access_token': 'zzhk711AxBQI7VFrJSmThUvWVbB4igc09ToTG1G6hnA2DTgDbSK6Ag', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 13,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"accountNo\\\": 115476151, \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50Tm8iOjExNTQ3NjE1MSwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.R4Znum2GCCG_PUfDPZpb4Mre3fMGnsQX8VcphwkPM7A\\\"}\",\n            \"response_time\": 0.115700244903564,\n            \"response\": \"{'getBalanceResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0155', 'responseMessage': 'CUSM DBER', 'errorMessage': 'CUSM DBER', 'responseTimestamp': '2019-01-11T09:33:21.454Z', 'accountNo': '115476151'}}}\",\n            \"id\": 14,\n            \"api_name\": \"GET_BALANCE\",\n            \"status\": \"FAILED\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.0376412868499756,\n            \"response\": \"{'access_token': 'Nu2avSx79aHZjKrY42zWg9qXyld8ZwfqziZtNeDAm0ohNCbvko0Dhv', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 15,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"customerReferenceNumber\\\": \\\"2019011102340682043\\\", \\\"accountNum\\\": \\\"0115476117\\\", \\\"destinationBankCode\\\": \\\"014\\\", \\\"destinationAccountNum\\\": \\\"3333333333\\\", \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjdXN0b21lclJlZmVyZW5jZU51bWJlciI6IjIwMTkwMTExMDIzNDA2ODIwNDMiLCJhY2NvdW50TnVtIjoiMDExNTQ3NjExNyIsImRlc3RpbmF0aW9uQmFua0NvZGUiOiIwMTQiLCJkZXN0aW5hdGlvbkFjY291bnROdW0iOiIzMzMzMzMzMzMzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.YtX6h2yqPQ6qepu0vjAyTb8tOECulvazw5J77jLTwOk\\\"}\",\n            \"response_time\": 0.291092157363892,\n            \"response\": \"{'getInterbankInquiryResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T09:33:53.444Z', 'destinationAccountNum': '3333333333', 'destinationAccountName': 'Bpk KEN AROK', 'destinationBankName': 'BCA', 'retrievalReffNum': '100000000097'}}}\",\n            \"id\": 16,\n            \"api_name\": \"GET_INTERBANK_INQUIRY\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.114080190658569,\n            \"response\": \"{'access_token': 'VpujSBJ440U55WL3JGlI282Gt2Qd8B1rvdU3vPJO1SqbAjtcDBIWly', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 17,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"customerReferenceNumber\\\": \\\"2019011102341755845\\\", \\\"accountNum\\\": \\\"0115476117\\\", \\\"destinationBankCode\\\": \\\"014\\\", \\\"destinationAccountNum\\\": \\\"3333333333\\\", \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjdXN0b21lclJlZmVyZW5jZU51bWJlciI6IjIwMTkwMTExMDIzNDE3NTU4NDUiLCJhY2NvdW50TnVtIjoiMDExNTQ3NjExNyIsImRlc3RpbmF0aW9uQmFua0NvZGUiOiIwMTQiLCJkZXN0aW5hdGlvbkFjY291bnROdW0iOiIzMzMzMzMzMzMzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.pLZgMrrx0rjVYxs0EbB-wAg-JC-4av2cE-gPhLnLVj4\\\"}\",\n            \"response_time\": 0.0972664356231689,\n            \"response\": \"{'getInterbankInquiryResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T09:34:04.724Z', 'destinationAccountNum': '3333333333', 'destinationAccountName': 'Bpk KEN AROK', 'destinationBankName': 'BCA', 'retrievalReffNum': '100000000097'}}}\",\n            \"id\": 18,\n            \"api_name\": \"GET_INTERBANK_INQUIRY\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 00:03:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.169531583786011,\n            \"response\": \"{'access_token': 'KK5QlnmDyFVSCbdYV6ubDKAMrtfC1I1WfF886P3vhvfMpipuZgMQ0r', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 19,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 02:56:46\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"customerReferenceNumber\\\": \\\"2019011102570540012\\\", \\\"accountNum\\\": \\\"0115476117\\\", \\\"destinationBankCode\\\": \\\"014\\\", \\\"destinationAccountNum\\\": \\\"3333333333\\\", \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjdXN0b21lclJlZmVyZW5jZU51bWJlciI6IjIwMTkwMTExMDI1NzA1NDAwMTIiLCJhY2NvdW50TnVtIjoiMDExNTQ3NjExNyIsImRlc3RpbmF0aW9uQmFua0NvZGUiOiIwMTQiLCJkZXN0aW5hdGlvbkFjY291bnROdW0iOiIzMzMzMzMzMzMzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.iX0gu_-BXtp6ZIrt1MbKtjmvzMTI0y305ZP7uhsC1QE\\\"}\",\n            \"response_time\": 0.322001218795776,\n            \"response\": \"{'getInterbankInquiryResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T09:56:52.507Z', 'destinationAccountNum': '3333333333', 'destinationAccountName': 'Bpk KEN AROK', 'destinationBankName': 'BCA', 'retrievalReffNum': '100000000097'}}}\",\n            \"id\": 20,\n            \"api_name\": \"GET_INTERBANK_INQUIRY\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 02:56:46\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.0617527961730957,\n            \"response\": \"{'access_token': 'cT5WQGiBpRMSqwm9xpHZ7qrpERGZchvBv2xmyoJHOW2wAplRRUyGhS', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 21,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:00:59\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"customerReferenceNumber\\\": \\\"201901110301107578\\\", \\\"accountNum\\\": \\\"0115476117\\\", \\\"destinationBankCode\\\": \\\"014\\\", \\\"destinationAccountNum\\\": \\\"3333333333\\\", \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjdXN0b21lclJlZmVyZW5jZU51bWJlciI6IjIwMTkwMTExMDMwMTEwNzU3OCIsImFjY291bnROdW0iOiIwMTE1NDc2MTE3IiwiZGVzdGluYXRpb25CYW5rQ29kZSI6IjAxNCIsImRlc3RpbmF0aW9uQWNjb3VudE51bSI6IjMzMzMzMzMzMzMiLCJjbGllbnRJZCI6IklEQk5JVFU5RVFVNUIifQ.wPuTQ0fHd2P9g05lqBkSG5V96txy8nqsS9WLx2H46pc\\\"}\",\n            \"response_time\": 0.105069398880005,\n            \"response\": \"{'getInterbankInquiryResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T10:00:57.871Z', 'destinationAccountNum': '3333333333', 'destinationAccountName': 'Bpk KEN AROK', 'destinationBankName': 'BCA', 'retrievalReffNum': '100000000097'}}}\",\n            \"id\": 22,\n            \"api_name\": \"GET_INTERBANK_INQUIRY\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:00:59\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.101522922515869,\n            \"response\": \"{'access_token': 's3a8gYu8uU76U2CtTqlR2Kjfsa7XTTjTDPkMCz8sbgcHueEuueHULa', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 23,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"customerReferenceNumber\\\": \\\"2019011103031645439\\\", \\\"accountNum\\\": \\\"0115476117\\\", \\\"destinationBankCode\\\": \\\"014\\\", \\\"destinationAccountNum\\\": \\\"3333333333\\\", \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjdXN0b21lclJlZmVyZW5jZU51bWJlciI6IjIwMTkwMTExMDMwMzE2NDU0MzkiLCJhY2NvdW50TnVtIjoiMDExNTQ3NjExNyIsImRlc3RpbmF0aW9uQmFua0NvZGUiOiIwMTQiLCJkZXN0aW5hdGlvbkFjY291bnROdW0iOiIzMzMzMzMzMzMzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.MEvGSSDoqBLHWH5XWzYyuGg3XDRXY4OAN6SQ8XtZdHU\\\"}\",\n            \"response_time\": 0.117616415023804,\n            \"response\": \"{'getInterbankInquiryResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T10:03:03.631Z', 'destinationAccountNum': '3333333333', 'destinationAccountName': 'Bpk KEN AROK', 'destinationBankName': 'BCA', 'retrievalReffNum': '100000000097'}}}\",\n            \"id\": 24,\n            \"api_name\": \"GET_INTERBANK_INQUIRY\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"customerReferenceNumber\\\": \\\"2019011103031627407\\\", \\\"amount\\\": 1, \\\"destinationAccountNum\\\": \\\"3333333333\\\", \\\"destinationAccountName\\\": \\\"Bpk KEN AROK\\\", \\\"destinationBankCode\\\": \\\"014\\\", \\\"destinationBankName\\\": \\\"BCA\\\", \\\"accountNum\\\": \\\"0115476117\\\", \\\"retrievalReffNum\\\": \\\"100000000097\\\", \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjdXN0b21lclJlZmVyZW5jZU51bWJlciI6IjIwMTkwMTExMDMwMzE2Mjc0MDciLCJhbW91bnQiOjEsImRlc3RpbmF0aW9uQWNjb3VudE51bSI6IjMzMzMzMzMzMzMiLCJkZXN0aW5hdGlvbkFjY291bnROYW1lIjoiQnBrIEtFTiBBUk9LIiwiZGVzdGluYXRpb25CYW5rQ29kZSI6IjAxNCIsImRlc3RpbmF0aW9uQmFua05hbWUiOiJCQ0EiLCJhY2NvdW50TnVtIjoiMDExNTQ3NjExNyIsInJldHJpZXZhbFJlZmZOdW0iOiIxMDAwMDAwMDAwOTciLCJjbGllbnRJZCI6IklEQk5JVFU5RVFVNUIifQ.DhjYoKq5TC37xcvtmVW9r8La9j11igjggp304AK01Rw\\\"}\",\n            \"response_time\": 0.245050191879272,\n            \"response\": \"{'getInterbankPaymentResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T10:03:03.881Z', 'destinationAccountNum': '3333333333', 'destinationAccountName': 'Bpk KEN AROK', 'customerReffNum': '100000000097', 'accountName': 'BNI API SERVICES'}}}\",\n            \"id\": 25,\n            \"api_name\": \"GET_INTERBANK_PAYMENT\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.0425746440887451,\n            \"response\": \"{'access_token': 'vHJMFdqI9Aowm3XzcGt4DRwV4oVZS2mDcb2BRNbOkJcAPCu3PJDw5q', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 26,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"accountNo\\\": 115476151, \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50Tm8iOjExNTQ3NjE1MSwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.R4Znum2GCCG_PUfDPZpb4Mre3fMGnsQX8VcphwkPM7A\\\"}\",\n            \"response_time\": 0.138227939605713,\n            \"response\": \"{'getBalanceResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T10:04:37.984Z', 'customerName': 'Bpk ROBERT NARO ROBERT NARO', 'accountCurrency': 'IDR', 'accountBalance': '17793643062331'}}}\",\n            \"id\": 27,\n            \"api_name\": \"GET_BALANCE\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.211770534515381,\n            \"response\": \"{'access_token': 'cRpsyAlhH4KS970FvpbYxduCwNGggNgsGjAZw5FNQYWOzkr5mgGA5y', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 28,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"accountNo\\\": 115476151, \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50Tm8iOjExNTQ3NjE1MSwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.R4Znum2GCCG_PUfDPZpb4Mre3fMGnsQX8VcphwkPM7A\\\"}\",\n            \"response_time\": 0.141019821166992,\n            \"response\": \"{'getBalanceResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T10:04:43.421Z', 'customerName': 'Bpk ROBERT NARO ROBERT NARO', 'accountCurrency': 'IDR', 'accountBalance': '17793643062331'}}}\",\n            \"id\": 29,\n            \"api_name\": \"GET_BALANCE\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{'grant_type': 'client_credentials', 'clientId': 'IDBNITU9EQU5B', 'signature': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJncmFudF90eXBlIjoiY2xpZW50X2NyZWRlbnRpYWxzIiwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.hJ1y3ychGN-I2KIA2CFqzcOXxmR2hFNk-XxvVD8SIuI'}\",\n            \"response_time\": 0.224825382232666,\n            \"response\": \"{'access_token': 'mOXVK8wlvcjEFHE6EYqmC7Z50QpMnKuztYxOtPXN6HInFlIQJdHUBW', 'token_type': 'Bearer', 'expires_in': 3600, 'scope': 'resource.WRITE resource.READ'}\",\n            \"id\": 30,\n            \"api_name\": \"GET_TOKEN\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        },\n        {\n            \"api_type\": \"OUTGOING\",\n            \"request\": \"{\\\"accountNo\\\": 115476151, \\\"clientId\\\": \\\"IDBNITU9EQU5B\\\", \\\"signature\\\": \\\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50Tm8iOjExNTQ3NjE1MSwiY2xpZW50SWQiOiJJREJOSVRVOUVRVTVCIn0.R4Znum2GCCG_PUfDPZpb4Mre3fMGnsQX8VcphwkPM7A\\\"}\",\n            \"response_time\": 0.124711751937866,\n            \"response\": \"{'getBalanceResponse': {'clientId': 'MODANA', 'parameters': {'responseCode': '0001', 'responseMessage': 'Request has been processed successfully', 'responseTimestamp': '2019-01-11T10:04:44.489Z', 'customerName': 'Bpk ROBERT NARO ROBERT NARO', 'accountCurrency': 'IDR', 'accountBalance': '17793643062331'}}}\",\n            \"id\": 31,\n            \"api_name\": \"GET_BALANCE\",\n            \"status\": \"SUCCESS\",\n            \"created_at\": \"2019-01-11 03:02:58\",\n            \"resource\": \"BNI-OPG\"\n        }\n    ]\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6c0e9f62-f61c-4af4-adcd-9ab2a1e2c899",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "df546907-4f46-417b-b33c-0dfd013f2a95",
				"type": "text/javascript",
				"exec": [
					"// Collection Level Execution",
					"",
					"// make sure the return is JSON",
					"pm.test(\"Make sure response always return JSON\", function () {",
					"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
					"});",
					"",
					"// make sure the return is JSON",
					"pm.test(\"Make sure response < 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});"
				]
			}
		}
	]
}